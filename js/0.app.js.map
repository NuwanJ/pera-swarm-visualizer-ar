{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/label.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/helpers/coordinateTransform.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/helpers/urlHelper.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","resolvedConfig","config","arena","size","minX","maxX","minY","maxY","offsets","showZeroMarker","showCoordMarker","scaleRange","mqtt","server","localStorage","getItem","location","href","split","port","path","channel","mixedReality","obstacles","robots","selectedReality","selectedRealities","real","virtual","hiddenOpacity","isDev","isShowingStats","isShowingLables","labelsVisibility","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","storedConfig","JSON","parse","saveConfig","data","setItem","stringify","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","threeRenderer","antialias","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","shadowMap","Config","capabilities","getMaxAnisotropy","updateSize","offsetWidth","offsetHeight","render","addLabel","prefix","visibility","className","textContent","marginTop","elementLabel","CSS2DObject","visible","removeLabel","remove","Light","init","castShadow","mapSize","height","directionalLightHelper","lightName","transformPosition","abs","transformScale","scaleX","scaleY","scaleZ","transformRotation","rotX","rotY","rotZ","rS","bS","glS","tS","Environment","log","scene_scale","geometry","depthWrite","ground","rotation","opacity","receiveShadow","markerGroup","grid","transparent","zeroGeometry","zeroMarker","markerGeometry","coordMarker","Stats","renderer","start","tick","frame","end","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","DatGUI","main","gui","dat","GUI","useLocalStorage","parseInt","onChange","addFolder","realityFolder","listen","toggleReality","placeFolder","updateCoord","open","objects","Array","isArray","variable","startsWith","children","reality","selected","entries","forEach","obj","pos","destroy","Obstacle","callback","obs","obstacle","createGeometry","createMaterial","userData","originalColor","labelVisibility","originalEmmisive","getHex","floor","random","name_temp","toString","substring","deleteIfExists","calculateZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","STLLoader","require","Robot","R","G","B","r","setRGB","heading","REALITY","loader","load","robotId","clickEvent","robot","alert","error","setReality","currentHeading","newHeading","DEG2RAD","rotationFlag","round","Tween","to","onUpdate","onComplete","delay","Promise","resolve","reject","publish","nodeContent","disp","querySelector","prevContent","getElementById","content","setAttribute","createTextNode","requestSnapshot","replaceChild","display","setTimeout","jwt","getUrlParam","parameter","defaultvalue","vars","urlparameter","indexOf","replace","key","getCredentials","storedCredentials","username","password","verify","token","err","decodeKey","MQTTClient","updateChannel","credentials","client_id","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","channelHash","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","t","destinationName","topic","i","exists","move","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","Main","light","place","source","THREEAR","stats","labelRenderer","CSS2DRenderer","isShowingObstacleLables","isShowingRobotLables","Label","then","controller","environment","show","patternMarker","patternUrl","markerObject","trackMarker","lastTimeMsec","requestAnimationFrame","animate","nowMsec","hidden","onDocumentMouseDown","Detector"],"mappings":"iHAAAA,EAAOC,QAAU,SAAUC,GACvB,IAAIC,EAAQD,EAAMC,MAYlB,SAASC,EAAgBC,GACrBC,KAAKD,OAASA,EAIdC,KAAKC,OAAS,IAAIL,EAAMM,QAGxBF,KAAKG,YAAc,EACnBH,KAAKI,YAAcC,IAGnBL,KAAKM,QAAU,EACfN,KAAKO,QAAUF,IAIfL,KAAKQ,cAAgB,EACrBR,KAAKS,cAAgBC,KAAKC,GAI1BX,KAAKY,iBAAmBP,IACxBL,KAAKa,gBAAkBR,IAIvBL,KAAKc,eAAgB,EACrBd,KAAKe,cAAgB,IAKrB,IAKIC,EACAC,EA6BIC,EA8EAC,EAGAC,EACAC,EAEAC,EACAC,EAxHJC,EAAQxB,KAERyB,EAAM,KAONC,EAAW,EACXC,EAAa,EACbC,EAAQ,EACRC,EAAY,IAAIjC,EAAMM,QACtB4B,GAAc,EAIlB9B,KAAK+B,cAAgB,WACjB,OAAOd,GAGXjB,KAAKgC,kBAAoB,WACrB,OAAOhB,GAGXhB,KAAKiC,WAAa,SAAUC,GACxBP,GAAcO,GAGlBlC,KAAKmC,SAAW,SAAUD,GACtBR,GAAYQ,GAIhBlC,KAAKoC,SACGlB,EAAI,IAAItB,EAAMM,QAEX,SAAiBmC,GACpB,IAAIC,EAAKtC,KAAKD,OAAOwC,OAAOC,SAG5BtB,EAAEuB,IAAIH,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACvBpB,EAAEwB,gBAAgBL,GAElBR,EAAUc,IAAIzB,KAKtBlB,KAAK4C,MAAS,WACV,IAAI1B,EAAI,IAAItB,EAAMM,QAElB,OAAO,SAAemC,GAClB,IAAIC,EAAKtC,KAAKD,OAAOwC,OAAOC,SAG5BtB,EAAEuB,IAAIH,EAAG,GAAIA,EAAG,GAAIA,EAAG,IACvBpB,EAAEwB,eAAeL,GAEjBR,EAAUc,IAAIzB,IAVR,GAgBdlB,KAAK6C,IAAM,SAAUC,EAAQC,EAAQC,EAAaC,GAC9C,GAAIzB,EAAMzB,kBAAkBH,EAAMsD,kBAAmB,CAEjD,IAEIC,EAFW3B,EAAMzB,OAAOqD,SACNC,QAAQC,IAAI9B,EAAMvB,QACZsD,SAG5BJ,GAAkBzC,KAAK8C,IAAMhC,EAAMzB,OAAO0D,IAAM,EAAK/C,KAAKC,GAAM,KAGhEa,EAAMY,QAAS,EAAIU,EAASK,EAAkBF,GAC9CzB,EAAMoB,MAAO,EAAIG,EAASI,EAAkBF,QACrCzB,EAAMzB,kBAAkBH,EAAM8D,oBAErClC,EAAMY,QAASU,GAAUtB,EAAMzB,OAAO4D,MAAQnC,EAAMzB,OAAO6D,MAASZ,GACpExB,EAAMoB,MAAOG,GAAUvB,EAAMzB,OAAO8D,IAAMrC,EAAMzB,OAAO+D,QAAWb,IAGlEc,QAAQC,KAAK,iFAIrBhE,KAAKiE,QAAU,SAAUC,GACjB1C,EAAMzB,kBAAkBH,EAAMsD,kBAC9BtB,GAASsC,EACF1C,EAAMzB,kBAAkBH,EAAM8D,oBACrClC,EAAMzB,OAAOoE,KAAOzD,KAAK0D,IAAIpE,KAAKM,QAASI,KAAK2D,IAAIrE,KAAKO,QAASP,KAAKD,OAAOoE,KAAOD,IACrF1C,EAAMzB,OAAOuE,yBACbxC,GAAc,GAEdiC,QAAQC,KAAK,wFAIrBhE,KAAKuE,SAAW,SAAUL,GAClB1C,EAAMzB,kBAAkBH,EAAMsD,kBAC9BtB,GAASsC,EACF1C,EAAMzB,kBAAkBH,EAAM8D,oBACrClC,EAAMzB,OAAOoE,KAAOzD,KAAK0D,IAAIpE,KAAKM,QAASI,KAAK2D,IAAIrE,KAAKO,QAASP,KAAKD,OAAOoE,KAAOD,IACrF1C,EAAMzB,OAAOuE,yBACbxC,GAAc,GAEdiC,QAAQC,KAAK,wFAIrBhE,KAAKwE,QACGrD,EAAS,IAAIvB,EAAMM,QAGnBkB,GAAO,IAAIxB,EAAM6E,YAAaC,mBAAmB3E,EAAO4E,GAAI,IAAI/E,EAAMM,QAAQ,EAAG,EAAG,IACpFmB,EAAcD,EAAKiC,QAAQuB,UAE3BtD,EAAe,IAAI1B,EAAMM,QACzBqB,EAAiB,IAAI3B,EAAM6E,WAExB,WACH,IAAIrB,EAAWpD,KAAKD,OAAOqD,SAE3BjC,EAAO0D,KAAKzB,GAAUE,IAAItD,KAAKC,QAG/BkB,EAAO2D,gBAAgB1D,GAIvBJ,EAAQN,KAAKqE,MAAM5D,EAAO6D,EAAG7D,EAAO8D,GAIpChE,EAAMP,KAAKqE,MAAMrE,KAAKwE,KAAK/D,EAAO6D,EAAI7D,EAAO6D,EAAI7D,EAAO8D,EAAI9D,EAAO8D,GAAI9D,EAAOgE,GAE9EnE,GAASW,EACTV,GAAOS,EAGPV,EAAQN,KAAK0D,IAAIpE,KAAKY,gBAAiBF,KAAK2D,IAAIrE,KAAKa,gBAAiBG,IAGtEC,EAAMP,KAAK0D,IAAIpE,KAAKQ,cAAeE,KAAK2D,IAAIrE,KAAKS,cAAeQ,IAGhEA,EAAMP,KAAK0D,IAAI3C,EAAKf,KAAK2D,IAAI3D,KAAKC,GAAKc,EAAKR,IAE5C,IAAImE,EAASjE,EAAOoC,SAAW3B,EAkC/B,OA/BAwD,EAAS1E,KAAK0D,IAAIpE,KAAKG,YAAaO,KAAK2D,IAAIrE,KAAKI,YAAagF,IAG/DpF,KAAKC,OAAO0C,IAAId,GAEhBV,EAAO6D,EAAII,EAAS1E,KAAK2E,IAAIpE,GAAOP,KAAK2E,IAAIrE,GAC7CG,EAAOgE,EAAIC,EAAS1E,KAAK4E,IAAIrE,GAC7BE,EAAO8D,EAAIG,EAAS1E,KAAK2E,IAAIpE,GAAOP,KAAK4E,IAAItE,GAG7CG,EAAO2D,gBAAgBzD,GAEvB+B,EAASyB,KAAK7E,KAAKC,QAAQ0C,IAAIxB,GAE/BnB,KAAKD,OAAOwF,OAAOvF,KAAKC,SAEG,IAAvBD,KAAKc,eACLa,GAAc,EAAI3B,KAAKe,cACvBW,GAAY,EAAI1B,KAAKe,gBAErBY,EAAa,EACbD,EAAW,GAGfE,EAAQ,EACRC,EAAUY,IAAI,EAAG,EAAG,MAOhBX,GACAR,EAAakE,kBAAkBxF,KAAKD,OAAOqD,UAAY3B,GACvD,GAAK,EAAIF,EAAekE,IAAIzF,KAAKD,OAAO2F,aAAejE,KAEvDH,EAAauD,KAAK7E,KAAKD,OAAOqD,UAC9B7B,EAAesD,KAAK7E,KAAKD,OAAO2F,YAChC5D,GAAc,GAEP,KAgBvB,SAAS6D,EAAc5F,EAAQ6F,GAC3B,IAAIC,EAAa,IAAI/F,EAAgBC,GAErCC,KAAK4F,gBAA4BE,IAAfF,EAA2BA,EAAaG,SAI1DC,OAAOC,eAAejG,KAAM,aAAc,CACtCkG,IAAK,WACD,OAAOL,KAIf7F,KAAK+B,cAAgB,WACjB,OAAO8D,EAAW9D,iBAGtB/B,KAAKgC,kBAAoB,WACrB,OAAO6D,EAAW7D,qBAItBhC,KAAKmG,SAAU,EAGfnG,KAAKoG,OAASpG,KAAKC,OAKnBD,KAAKqG,YAAa,EAClBrG,KAAKsG,UAAY,EAGjBtG,KAAKuG,cAAe,EACpBvG,KAAKwG,YAAc,EAGnBxG,KAAKyG,WAAY,EACjBzG,KAAK0G,YAAc,EAInB1G,KAAK2G,YAAa,EAClB3G,KAAK4G,gBAAkB,EAGvB5G,KAAK6G,YAAa,EAGlB7G,KAAK8G,KAAO,CAAEC,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAIC,OAAQ,IAGnDlH,KAAKmH,aAAe,CAChBC,MAAOxH,EAAMC,MAAMkH,KACnBM,KAAMzH,EAAMC,MAAMyH,OAClBC,IAAK3H,EAAMC,MAAMoH,OAMrB,IAAIzF,EAAQxB,KAERwH,EAAc,IAAI5H,EAAM6H,QACxBC,EAAY,IAAI9H,EAAM6H,QACtBE,EAAc,IAAI/H,EAAM6H,QAExBG,EAAW,IAAIhI,EAAM6H,QACrBI,EAAS,IAAIjI,EAAM6H,QACnBK,EAAW,IAAIlI,EAAM6H,QAErBM,EAAa,IAAInI,EAAM6H,QACvBO,EAAW,IAAIpI,EAAM6H,QACrBQ,EAAa,IAAIrI,EAAM6H,QAEvBS,GACO,EADPA,EAEQ,EAFRA,EAGO,EAHPA,EAIK,EAJLA,EAKc,EALdA,EAMa,EANbA,EAOW,EAGXC,EAAQD,EAIZlI,KAAKoI,QAAUpI,KAAKC,OAAOoD,QAC3BrD,KAAKqI,UAAYrI,KAAKD,OAAOqD,SAASC,QACtCrD,KAAKsI,MAAQtI,KAAKD,OAAOoE,KAIzB,IAAIoE,EAAc,CAAEC,KAAM,UACtBC,EAAa,CAAED,KAAM,SACrBE,EAAW,CAAEF,KAAM,OAIvB,SAAS3F,EAAIC,EAAQC,GACjB,IAAI4F,EAAUnH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWgD,KAAOpH,EAAMoE,WAE5EC,EAAWhD,IAAIC,EAAQC,EAAQ4F,EAAQE,YAAaF,EAAQG,cA8BhE,SAASC,IACL,OAAOrI,KAAKsI,IAAI,IAAMxH,EAAM8E,WAGhC,SAAS2C,EAAYC,GACjB,IAAsB,IAAlB1H,EAAM2E,QAAV,CAIA,GAFA+C,EAAMC,iBAEFD,EAAME,SAAW5H,EAAM2F,aAAaC,MAAO,CAC3C,IAA2B,IAAvB5F,EAAM+E,aAAwB,OAElC4B,EAAQD,EAERV,EAAY/E,IAAIyG,EAAMG,QAASH,EAAMI,cAClC,GAAIJ,EAAME,SAAW5H,EAAM2F,aAAaE,KAAM,CACjD,IAAyB,IAArB7F,EAAM6E,WAAsB,OAEhC8B,EAAQD,EAERH,EAAWtF,IAAIyG,EAAMG,QAASH,EAAMI,cACjC,GAAIJ,EAAME,SAAW5H,EAAM2F,aAAaI,IAAK,CAChD,IAAwB,IAApB/F,EAAMiF,UAAqB,OAE/B0B,EAAQD,EAERN,EAASnF,IAAIyG,EAAMG,QAASH,EAAMI,SAGlCnB,IAAUD,IACVnC,SAASwD,iBAAiB,YAAaC,GAAa,GACpDzD,SAASwD,iBAAiB,UAAWE,GAAW,GAChDjI,EAAMkI,cAAcjB,KAI5B,SAASe,EAAYN,GACjB,IAAsB,IAAlB1H,EAAM2E,QAAV,CAEA+C,EAAMC,iBAEN,IAAIR,EAAUnH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWgD,KAAOpH,EAAMoE,WAE5E,GAAIuC,IAAUD,EAAc,CACxB,IAA2B,IAAvB1G,EAAM+E,aAAwB,OAElCmB,EAAUjF,IAAIyG,EAAMG,QAASH,EAAMI,SACnC3B,EAAYgC,WAAWjC,EAAWF,GAGlC3B,EAAW5D,WAAa,EAAIvB,KAAKC,GAAKgH,EAAY3C,EAAK2D,EAAQE,YAAerH,EAAMgF,aAGpFX,EAAW1D,SAAW,EAAIzB,KAAKC,GAAKgH,EAAYxC,EAAKwD,EAAQG,aAAgBtH,EAAMgF,aAEnFgB,EAAY3C,KAAK6C,QACd,GAAIS,IAAUD,EAAa,CAC9B,IAAyB,IAArB1G,EAAM6E,WAAsB,OAEhC2B,EAASvF,IAAIyG,EAAMG,QAASH,EAAMI,SAClCrB,EAAW0B,WAAW3B,EAAUD,GAE5BE,EAAW9C,EAAI,EACfU,EAAW5B,QAAQ8E,KACZd,EAAW9C,EAAI,GACtBU,EAAWtB,SAASwE,KAGxBhB,EAAWlD,KAAKmD,QACb,GAAIG,IAAUD,EAAW,CAC5B,IAAwB,IAApB1G,EAAMiF,UAAqB,OAE/BoB,EAAOpF,IAAIyG,EAAMG,QAASH,EAAMI,SAChCxB,EAAS6B,WAAW9B,EAAQD,GAE5B/E,EAAIiF,EAAS9C,EAAG8C,EAAS3C,GAEzByC,EAAS/C,KAAKgD,GAGdM,IAAUD,GAAY1G,EAAMgD,UAGpC,SAASiF,KACiB,IAAlBjI,EAAM2E,UAEVJ,SAAS6D,oBAAoB,YAAaJ,GAAa,GACvDzD,SAAS6D,oBAAoB,UAAWH,GAAW,GACnDjI,EAAMkI,cAAchB,GACpBP,EAAQD,GAGZ,SAAS2B,EAAaX,GAClB,IAAsB,IAAlB1H,EAAM2E,UAA0C,IAArB3E,EAAM6E,YAAwB8B,IAAUD,EAAvE,CAEAgB,EAAMC,iBACND,EAAMY,kBAEN,IAAIC,EAAQ,OAEajE,IAArBoD,EAAMc,WAGND,EAAQb,EAAMc,gBACUlE,IAAjBoD,EAAMe,SAGbF,GAASb,EAAMe,QAGfF,EAAQ,EACRlE,EAAWtB,SAASwE,KACbgB,EAAQ,GACflE,EAAW5B,QAAQ8E,KAGvBvH,EAAMgD,SACNhD,EAAMkI,cAAcjB,GACpBjH,EAAMkI,cAAchB,IAGxB,SAASwB,EAAUhB,GACf,IAAsB,IAAlB1H,EAAM2E,UAA0C,IAArB3E,EAAMqF,aAA4C,IAApBrF,EAAMiF,UAEnE,OAAQyC,EAAMiB,SACV,KAAK3I,EAAMsF,KAAKE,GACZnE,EAAI,EAAGrB,EAAMkF,aACblF,EAAMgD,SACN,MAEJ,KAAKhD,EAAMsF,KAAKI,OACZrE,EAAI,GAAIrB,EAAMkF,aACdlF,EAAMgD,SACN,MAEJ,KAAKhD,EAAMsF,KAAKC,KACZlE,EAAIrB,EAAMkF,YAAa,GACvBlF,EAAMgD,SACN,MAEJ,KAAKhD,EAAMsF,KAAKG,MACZpE,GAAKrB,EAAMkF,YAAa,GACxBlF,EAAMgD,UAKlB,SAAS4F,EAAWlB,GAChB,IAAsB,IAAlB1H,EAAM2E,QAAV,CAEA,OAAQ+C,EAAMmB,QAAQ9G,QAClB,KAAK,EACD,IAA2B,IAAvB/B,EAAM+E,aAAwB,OAElC4B,EAAQD,EAERV,EAAY/E,IAAIyG,EAAMmB,QAAQ,GAAGC,MAAOpB,EAAMmB,QAAQ,GAAGE,OACzD,MAEJ,KAAK,EACD,IAAyB,IAArB/I,EAAM6E,WAAsB,OAEhC8B,EAAQD,EAER,IAAIsC,EAAKtB,EAAMmB,QAAQ,GAAGC,MAAQpB,EAAMmB,QAAQ,GAAGC,MAC/CG,EAAKvB,EAAMmB,QAAQ,GAAGE,MAAQrB,EAAMmB,QAAQ,GAAGE,MAC/ClI,EAAW3B,KAAKwE,KAAKsF,EAAKA,EAAKC,EAAKA,GACxC1C,EAAWtF,IAAI,EAAGJ,GAClB,MAEJ,KAAK,EACD,IAAwB,IAApBb,EAAMiF,UAAqB,OAE/B0B,EAAQD,EAERN,EAASnF,IAAIyG,EAAMmB,QAAQ,GAAGC,MAAOpB,EAAMmB,QAAQ,GAAGE,OACtD,MAEJ,QACIpC,EAAQD,EAGZC,IAAUD,GAAY1G,EAAMkI,cAAcjB,IAGlD,SAASiC,EAAUxB,GACf,IAAsB,IAAlB1H,EAAM2E,QAAV,CAEA+C,EAAMC,iBACND,EAAMY,kBAEN,IAAInB,EAAUnH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWgD,KAAOpH,EAAMoE,WAE5E,OAAQsD,EAAMmB,QAAQ9G,QAClB,KAAK,EACD,IAA2B,IAAvB/B,EAAM+E,aAAwB,OAClC,GAAI4B,IAAUD,EAAoB,OAElCR,EAAUjF,IAAIyG,EAAMmB,QAAQ,GAAGC,MAAOpB,EAAMmB,QAAQ,GAAGE,OACvD5C,EAAYgC,WAAWjC,EAAWF,GAGlC3B,EAAW5D,WAAa,EAAIvB,KAAKC,GAAKgH,EAAY3C,EAAK2D,EAAQE,YAAerH,EAAMgF,aAEpFX,EAAW1D,SAAW,EAAIzB,KAAKC,GAAKgH,EAAYxC,EAAKwD,EAAQG,aAAgBtH,EAAMgF,aAEnFgB,EAAY3C,KAAK6C,GAEjBlG,EAAMgD,SACN,MAEJ,KAAK,EACD,IAAyB,IAArBhD,EAAM6E,WAAsB,OAChC,GAAI8B,IAAUD,EAAmB,OAEjC,IAAIsC,EAAKtB,EAAMmB,QAAQ,GAAGC,MAAQpB,EAAMmB,QAAQ,GAAGC,MAC/CG,EAAKvB,EAAMmB,QAAQ,GAAGE,MAAQrB,EAAMmB,QAAQ,GAAGE,MAC/ClI,EAAW3B,KAAKwE,KAAKsF,EAAKA,EAAKC,EAAKA,GAExCzC,EAASvF,IAAI,EAAGJ,GAChB4F,EAAW0B,WAAW3B,EAAUD,GAE5BE,EAAW9C,EAAI,EACfU,EAAWtB,SAASwE,KACbd,EAAW9C,EAAI,GACtBU,EAAW5B,QAAQ8E,KAGvBhB,EAAWlD,KAAKmD,GAEhBxG,EAAMgD,SACN,MAEJ,KAAK,EACD,IAAwB,IAApBhD,EAAMiF,UAAqB,OAC/B,GAAI0B,IAAUD,EAAiB,OAE/BL,EAAOpF,IAAIyG,EAAMmB,QAAQ,GAAGC,MAAOpB,EAAMmB,QAAQ,GAAGE,OACpDzC,EAAS6B,WAAW9B,EAAQD,GAE5B/E,EAAIiF,EAAS9C,EAAG8C,EAAS3C,GAEzByC,EAAS/C,KAAKgD,GAEdrG,EAAMgD,SACN,MAEJ,QACI2D,EAAQD,IAIpB,SAASyC,KACiB,IAAlBnJ,EAAM2E,UAEV3E,EAAMkI,cAAchB,GACpBP,EAAQD,GAGZ,SAAS0C,EAAY1B,GACjBA,EAAMC,iBA/RVnJ,KAAKwE,OAAS,WACNxE,KAAK2G,YAAcwB,IAAUD,GAC7BrC,EAAW5D,WAsBN,EAAIvB,KAAKC,GAAM,GAAK,GAAMa,EAAMoF,kBAnBb,IAAxBf,EAAWrB,UACXxE,KAAK0J,cAAcnB,IAI3BvI,KAAK6K,MAAQ,WACT1C,EAAQD,EAERlI,KAAKC,OAAO4E,KAAK7E,KAAKoI,SACtBpI,KAAKD,OAAOqD,SAASyB,KAAK7E,KAAKqI,WAC/BrI,KAAKD,OAAOoE,KAAOnE,KAAKsI,MAExBtI,KAAKD,OAAOuE,yBACZtE,KAAK0J,cAAcnB,GAEnBvI,KAAKwE,UA8QTxE,KAAK8K,QAAU,WACX9K,KAAK4F,WAAWgE,oBAAoB,cAAegB,GAAa,GAChE5K,KAAK4F,WAAWgE,oBAAoB,YAAaX,GAAa,GAC9DjJ,KAAK4F,WAAWgE,oBAAoB,aAAcC,GAAc,GAChE7J,KAAK4F,WAAWgE,oBAAoB,sBAAuBC,GAAc,GAEzE7J,KAAK4F,WAAWgE,oBAAoB,aAAcQ,GAAY,GAC9DpK,KAAK4F,WAAWgE,oBAAoB,WAAYe,GAAU,GAC1D3K,KAAK4F,WAAWgE,oBAAoB,YAAac,GAAW,GAE5D3E,SAAS6D,oBAAoB,YAAaJ,GAAa,GACvDzD,SAAS6D,oBAAoB,UAAWH,GAAW,GAEnDsB,OAAOnB,oBAAoB,UAAWM,GAAW,IAGrDlK,KAAK4F,WAAW2D,iBAAiB,cAAeqB,GAAa,GAE7D5K,KAAK4F,WAAW2D,iBAAiB,YAAaN,GAAa,GAC3DjJ,KAAK4F,WAAW2D,iBAAiB,aAAcM,GAAc,GAC7D7J,KAAK4F,WAAW2D,iBAAiB,sBAAuBM,GAAc,GAEtE7J,KAAK4F,WAAW2D,iBAAiB,aAAca,GAAY,GAC3DpK,KAAK4F,WAAW2D,iBAAiB,WAAYoB,GAAU,GACvD3K,KAAK4F,WAAW2D,iBAAiB,YAAamB,GAAW,GAEzDK,OAAOxB,iBAAiB,UAAWW,GAAW,GAG9ClK,KAAKwE,SA2MT,OAn3BK3E,IAAOA,EAAQ,CAAEkH,KAAM,EAAGO,OAAQ,EAAGL,MAAO,IA2qBjDtB,EAAcqF,UAAYhF,OAAOiF,OAAOrL,EAAMsL,gBAAgBF,WAC9DrF,EAAcqF,UAAUG,YAAcxF,EAEtCK,OAAOoF,iBAAiBzF,EAAcqF,UAAW,CAC7CjL,OAAQ,CACJmG,IAAK,WACD,OAAOlG,KAAK6F,WAAW9F,SAI/BE,OAAQ,CACJiG,IAAK,WACD,OAAOlG,KAAK6F,WAAW5F,QAG3BwC,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,2EACbhE,KAAK6F,WAAW5F,OAAO4E,KAAKwG,KAIpClL,YAAa,CACT+F,IAAK,WACD,OAAOlG,KAAK6F,WAAW1F,aAG3BsC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAW1F,YAAckL,IAItCjL,YAAa,CACT8F,IAAK,WACD,OAAOlG,KAAK6F,WAAWzF,aAG3BqC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWzF,YAAciL,IAItC/K,QAAS,CACL4F,IAAK,WACD,OAAOlG,KAAK6F,WAAWvF,SAG3BmC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWvF,QAAU+K,IAIlC9K,QAAS,CACL2F,IAAK,WACD,OAAOlG,KAAK6F,WAAWtF,SAG3BkC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWtF,QAAU8K,IAIlC7K,cAAe,CACX0F,IAAK,WACD,OAAOlG,KAAK6F,WAAWrF,eAG3BiC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWrF,cAAgB6K,IAIxC5K,cAAe,CACXyF,IAAK,WACD,OAAOlG,KAAK6F,WAAWpF,eAG3BgC,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWpF,cAAgB4K,IAIxCzK,gBAAiB,CACbsF,IAAK,WACD,OAAOlG,KAAK6F,WAAWjF,iBAG3B6B,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWjF,gBAAkByK,IAI1CxK,gBAAiB,CACbqF,IAAK,WACD,OAAOlG,KAAK6F,WAAWhF,iBAG3B4B,IAAK,SAAU4I,GACXrL,KAAK6F,WAAWhF,gBAAkBwK,IAI1CvK,cAAe,CACXoF,IAAK,WACD,OAAOlG,KAAK6F,WAAW/E,eAG3B2B,IAAK,SAAU4I,GACXrL,KAAK6F,WAAW/E,cAAgBuK,IAIxCtK,cAAe,CACXmF,IAAK,WACD,OAAOlG,KAAK6F,WAAW9E,eAG3B0B,IAAK,SAAU4I,GACXrL,KAAK6F,WAAW9E,cAAgBsK,IAMxCC,OAAQ,CACJpF,IAAK,WAED,OADAnC,QAAQC,KAAK,+EACLhE,KAAKqG,YAGjB5D,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,8EACbhE,KAAKqG,YAAcgF,IAI3BE,SAAU,CACNrF,IAAK,WAED,OADAnC,QAAQC,KAAK,mFACLhE,KAAKuG,cAGjB9D,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,kFACbhE,KAAKuG,cAAgB8E,IAI7BG,MAAO,CACHtF,IAAK,WAED,OADAnC,QAAQC,KAAK,6EACLhE,KAAKyG,WAGjBhE,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,4EACbhE,KAAKyG,WAAa4E,IAI1BI,OAAQ,CACJvF,IAAK,WAED,OADAnC,QAAQC,KAAK,+EACLhE,KAAK6G,YAGjBpE,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,8EACbhE,KAAK6G,YAAcwE,IAI3BK,aAAc,CACVxF,IAAK,WAED,OADAnC,QAAQC,KAAK,wFACLhE,KAAK6F,WAAW/E,eAG5B2B,IAAK,SAAU4I,GACXtH,QAAQC,KAAK,uFACbhE,KAAK6F,WAAW/E,eAAiBuK,IAIzCM,qBAAsB,CAClBzF,IAAK,WAID,OAHAnC,QAAQC,KACJ,4FAEGhE,KAAK6F,WAAW9E,eAG3B0B,IAAK,SAAU4I,GACXtH,QAAQC,KACJ,4FAEJhE,KAAK6F,WAAW9E,cAAgBsK,MAKrC1F,I,8WCn3BPiG,E,+rBAGJ,IAAMC,EAAS,CACXjK,MAAO,KACPkK,MAAO,CACHC,KAAM,IACNC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,KAAM,IAEVC,QAAQ,CACJpH,EAAG,EACHG,EAAG,EACHF,EAAG,EACHoH,gBAAgB,EAChBC,iBAAiB,EACjBC,WAAY,KAEhBC,KAAM,CACFC,OAAQC,aAAaC,QAAQ5G,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,YAAc,yBAClFC,KAAML,aAAaC,QAAQ5G,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,UAAY,KAC9EE,KAAM,QACNC,QAASP,aAAaC,QAAQ5G,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,aAAe,MAExFI,aAAc,CACVC,UAAW,IACXC,OAAQ,KAEZC,gBAAiB,IACjBC,kBAAmB,CACfC,MAAM,EACNC,SAAS,GAEbC,cAAe,IACfC,OAAO,EACPC,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAkB,CACdV,WAAW,EACXC,QAAQ,GAEZU,yBAAyB,EACzBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,cAAe,EACfC,IAAK,EACLC,OAAQC,IAAMC,OAAOC,UAAUC,MAC/BC,SAAU,IACVC,QAAS,CACL5B,KAAM,qBACN6B,WAAY,CAAC,CAAEC,KAAM,KAAMC,MAAO,oBAEtCC,KAAM,CACFC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,SAAU,CACNC,MAAO,SACPC,SAAU,WAGlBC,IAAK,CACDF,MAAO,SACPG,KAAM,MAEVC,OAAQ,CACJhM,IAAK,GACL+L,KAAM,GACNE,IAAK,IACLC,OAAQ,EACRC,KAAM,EACNC,KAAM,EACNC,KAAM,GAEVC,SAAU,CACNpJ,YAAY,EACZC,iBAAkB,GAClBJ,YAAa,GACbF,UAAW,GACXnG,YAAa,IACbC,YAAa,IACbI,cAAe,EACfC,cAAgB,EAAI,GAAMC,KAAKC,GAC/BC,iBAAkBP,IAClBQ,gBAAiBR,IACjBS,eAAe,EACfC,cAAe,GACfsF,YAAY,EACZpG,OAAQ,CACJ+E,EAAG,EACHG,EAAG,EACHF,EAAG,IAGX+K,aAAc,CACV7J,SAAS,EACTkJ,MAAO,SAEXY,iBAAkB,CACd9J,SAAS,EACTkJ,MAAO,SACPa,UAAW,GACXlL,GAAI,GACJG,EAAG,IACHF,EAAG,KAEPkL,OAAQ,CACJhK,SAAS,EACTiK,eAAe,EACfC,KAAM,EACNC,SAAU,KACVC,UAAW,KACXf,KAAM,IACNE,IAAK,IACL7L,IAAK,IACLF,MAAO,IACPG,QAAS,IACTF,MAAO,KAEX4M,WAAY,CACRrK,SAAS,EACTkJ,MAAO,SACPa,UAAW,IACX7N,SAAU,IACV2C,EAAG,EACHG,EAAG,EACHF,EAAG,GAEPwL,UAAW,CACPtK,SAAS,EACTkJ,MAAO,SACPqB,YAAa,SACbR,UAAW,IACXlL,EAAG,EACHG,EAAG,EACHF,EAAG,IAKL0L,EAAejE,aAAaC,QAAQ5G,SAAS6G,SAASC,KAAO,WACnEjB,EAAiB+E,QAAsDC,KAAKC,MAAMF,GAAgB9E,EAG3F,IAAMiF,EAAa,SAACC,GACvBrE,aAAasE,QAAQjL,SAAS6G,SAASC,KAAO,UAAW+D,KAAKK,UAAL,OAAoBpF,GAAWkF,MAG7EnF,ICtJA,GACXsF,SAAUnG,OAAOoG,yBACjBC,MAAQ,WACJ,IACI,IAAIF,EAASnL,SAASsL,cAAc,UAEpC,SACItG,OAAOuG,wBACNJ,EAAOK,WAAW,WAAYL,EAAOK,WAAW,uBAEvD,MAAOC,GACL,OAAO,GATP,GAaRC,UAAW1G,OAAO2G,OAClBC,QAAS5G,OAAO6G,MAAQ7G,OAAO8G,YAAc9G,OAAO+G,UAAY/G,OAAOgH,KAEvEC,qBAAsB,WAClB,IAAIrJ,EAAU5C,SAASsL,cAAc,OAwBrC,OAvBA1I,EAAQsJ,GAAK,sBACbtJ,EAAQuJ,MAAMC,WAAa,YAC3BxJ,EAAQuJ,MAAME,SAAW,OACzBzJ,EAAQuJ,MAAMG,WAAa,SAC3B1J,EAAQuJ,MAAMI,UAAY,SAC1B3J,EAAQuJ,MAAMK,WAAa,OAC3B5J,EAAQuJ,MAAM7C,MAAQ,OACtB1G,EAAQuJ,MAAMM,QAAU,QACxB7J,EAAQuJ,MAAMO,MAAQ,QACtB9J,EAAQuJ,MAAMQ,OAAS,aAElB1S,KAAKoR,QACNzI,EAAQgK,UAAY5H,OAAOuG,sBACrB,CACI,4JACA,0FACFsB,KAAK,MACP,CACI,qJACA,0FACFA,KAAK,OAGVjK,GAGXkK,mBAAoB,SAAUC,GAC1B,IAAIC,EAAQd,EAAItJ,EAIhBoK,OAA+BjN,KAF/BgN,EAAaA,GAAc,IAEPC,OAAuBD,EAAWC,OAAShN,SAAS6C,KACxEqJ,OAAuBnM,IAAlBgN,EAAWb,GAAmBa,EAAWb,GAAK,SAEnDtJ,EAAU3I,KAAKgS,wBACPC,GAAKA,EAEbc,EAAOC,YAAYrK,K,yLCzDNsK,E,WACjB,WAAYC,EAAOC,GAAW,Y,4FAAA,SAE1BnT,KAAKkT,MAAQA,EACblT,KAAKmT,UAAYA,EAGjBnT,KAAKoT,cAAgB,IAAIxT,gBAAoB,CACzCyT,WAAW,EACXC,OAAO,IAKXtT,KAAKoT,cAAcG,cAAc,IAAI3T,QAAY,aAAc,GAE/DI,KAAKoT,cAAcI,cAAczI,OAAO0I,kBAExCzT,KAAKoT,cAAcM,QAAQ3I,OAAO4I,WAAY5I,OAAO6I,aAErD5T,KAAKoT,cAAcxN,WAAWsM,MAAM9O,SAAW,WAC/CpD,KAAKoT,cAAcxN,WAAWsM,MAAMrO,IAAM,MAC1C7D,KAAKoT,cAAcxN,WAAWsM,MAAMtO,KAAO,MAG3CuP,EAAUH,YAAYhT,KAAKoT,cAAcxN,YAGzC5F,KAAKoT,cAAcS,UAAU1N,SAAU,EACvCnG,KAAKoT,cAAcS,UAAUrL,KAAO5I,mBAGpCkU,EAAO1F,cAAgBpO,KAAKoT,cAAcW,aAAaC,mBAGvDhU,KAAKiU,aAGLlO,SAASwD,iBAAiB,oBAAoB,kBAAM,EAAK0K,gBAAc,GACvElJ,OAAOxB,iBAAiB,UAAU,kBAAM,EAAK0K,gBAAc,G,4DAI3DjU,KAAKoT,cAAcM,QAAQ1T,KAAKmT,UAAUe,YAAalU,KAAKmT,UAAUgB,gB,6BAGnEjB,EAAOzD,GAEVzP,KAAKoT,cAAcgB,OAAOlB,EAAOzD,Q,wCCjC5B4E,EAAW,SAACC,EAAQvU,EAAQiP,EAAMuF,GAC3C,QAAazO,IAATkJ,EAAoB,CACpB,IAAMrG,EAAU5C,SAASsL,cAAc,OACvC1I,EAAQ6L,UAAY,QAGpB7L,EAAQ8L,YAAc1U,EAAO+O,KAE7BnG,EAAQuJ,MAAMwC,UAAY,SAC1B,IAAMC,EAAe,IAAIC,IAAYjM,GACrCgM,EAAa7F,KAAb,gBAA6B/O,EAAOkS,GAApC,KACA0C,EAAavR,SAASX,IAAI,EAAG,EAAG,GAChCkS,EAAaE,QAAUN,EACvBvF,EAAKrM,IAAIgS,GACT3F,EAAK8F,YAAc,WACf9F,EAAK+F,OAAOJ,MAKXG,EAAc,SAAC9F,QACXlJ,IAATkJ,QAA2ClJ,IAArBkJ,EAAK8F,aAC3B9F,EAAK8F,e,0KCrCQE,E,WACjB,WAAY9B,I,4FAAO,SACflT,KAAKkT,MAAQA,EAEblT,KAAKiV,O,sDAKLjV,KAAKgQ,aAAe,IAAIpQ,eAAmBkU,EAAO9D,aAAaX,OAC/DrP,KAAKgQ,aAAa6E,QAAUf,EAAO9D,aAAa7J,QAGhDnG,KAAKwQ,WAAa,IAAI5Q,aAClBkU,EAAOtD,WAAWnB,MAClByE,EAAOtD,WAAWN,UAClB4D,EAAOtD,WAAWnO,UAEtBrC,KAAKwQ,WAAWpN,SAASX,IAAIqR,EAAOtD,WAAWxL,EAAG8O,EAAOtD,WAAWrL,EAAG2O,EAAOtD,WAAWvL,GACzFjF,KAAKwQ,WAAWqE,QAAUf,EAAOtD,WAAWrK,QAG5CnG,KAAKiQ,iBAAmB,IAAIrQ,mBACxBkU,EAAO7D,iBAAiBZ,MACxByE,EAAO7D,iBAAiBC,WAE5BlQ,KAAKiQ,iBAAiB7M,SAASX,IAC3BqR,EAAO7D,iBAAiBjL,EACxB8O,EAAO7D,iBAAiB9K,EACxB2O,EAAO7D,iBAAiBhL,GAE5BjF,KAAKiQ,iBAAiB4E,QAAUf,EAAO7D,iBAAiB9J,QAGxDnG,KAAKiQ,iBAAiBiF,WAAapB,EAAO3D,OAAOhK,QACjDnG,KAAKiQ,iBAAiBE,OAAOE,KAAOyD,EAAO3D,OAAOE,KAClDrQ,KAAKiQ,iBAAiBE,OAAOV,OAAOD,KAAOsE,EAAO3D,OAAOX,KACzDxP,KAAKiQ,iBAAiBE,OAAOV,OAAOC,IAAMoE,EAAO3D,OAAOT,IACxD1P,KAAKiQ,iBAAiBE,OAAOV,OAAO7L,KAAOkQ,EAAO3D,OAAOvM,KACzD5D,KAAKiQ,iBAAiBE,OAAOV,OAAO9L,MAAQmQ,EAAO3D,OAAOxM,MAC1D3D,KAAKiQ,iBAAiBE,OAAOV,OAAO5L,IAAMiQ,EAAO3D,OAAOtM,IACxD7D,KAAKiQ,iBAAiBE,OAAOV,OAAO3L,OAASgQ,EAAO3D,OAAOrM,OAC3D9D,KAAKiQ,iBAAiBE,OAAOgF,QAAQ1C,MAAQqB,EAAO3D,OAAOG,SAC3DtQ,KAAKiQ,iBAAiBE,OAAOgF,QAAQC,OAAStB,EAAO3D,OAAOI,UAG5DvQ,KAAKqV,uBAAyB,IAAIzV,eAAmBI,KAAKiQ,iBAAiBE,OAAOV,QAClFzP,KAAKqV,uBAAuBR,QAAUf,EAAO3D,OAAOC,cAGpDpQ,KAAKyQ,UAAY,IAAI7Q,kBACjBkU,EAAOrD,UAAUpB,MACjByE,EAAOrD,UAAUC,YACjBoD,EAAOrD,UAAUP,WAErBlQ,KAAKyQ,UAAUrN,SAASX,IAAIqR,EAAOrD,UAAUzL,EAAG8O,EAAOrD,UAAUtL,EAAG2O,EAAOrD,UAAUxL,GACrFjF,KAAKyQ,UAAUoE,QAAUf,EAAOrD,UAAUtK,U,4BAGxCmP,GACF,OAAQA,GACJ,IAAK,UACDtV,KAAKkT,MAAMvQ,IAAI3C,KAAKgQ,cACpB,MAEJ,IAAK,cACDhQ,KAAKkT,MAAMvQ,IAAI3C,KAAKiQ,kBACpBjQ,KAAKkT,MAAMvQ,IAAI3C,KAAKqV,wBACpB,MAEJ,IAAK,QACDrV,KAAKkT,MAAMvQ,IAAI3C,KAAKwQ,YACpB,MAEJ,IAAK,OACDxQ,KAAKkT,MAAMvQ,IAAI3C,KAAKyQ,iB,uCC9E7B,SAAS8E,EAAkBvQ,EAAEG,EAAEF,EAAGrD,GAKrC,MAAO,CAACgO,KAJG,IAAKkE,EAAO1H,QAAQpH,EAAIpD,EAAOoD,EAIxB6K,KAHP,IAAKiE,EAAO1H,QAAQjH,EAAIvD,IAAQuD,EAAIzE,KAAK8U,IAAI1B,EAAOhI,MAAMI,OAG1C4D,KAFhB,IAAKgE,EAAO1H,QAAQnH,EAAIrD,GAAQqD,GAIxC,SAASwQ,EAAe7T,GAC3B,MAAO,CAAC8T,OAAO9T,EAAO+T,OAAO/T,EAAOgU,OAAOhU,GAGxC,SAASiU,EAAkB7Q,EAAEG,EAAEF,GAClC,MAAO,CAAC6Q,KAAK9Q,EAAEtE,KAAKC,GAAK,EAAGoV,KAAK5Q,EAAG6Q,KAAK/Q,G,ICbzCgR,EAAIC,EAAIC,EAAKC,ECIIC,EACjB,c,4FAAc,SACVtS,QAAQuS,IAAR,8BAAmCC,YAAnC,uBAA6DzC,EAAOhI,MAAMC,OAE1E,IAAIyK,EAAW,IAAI5W,sBAA0BkU,EAAOhI,MAAMC,KAAM+H,EAAOhI,MAAMC,MAEzEqD,EAAW,IAAIxP,uBAA2B,CAC1CyP,MAAO,SACPoH,YAAY,IAPN,EAUkBlB,EAAkB,EAAE,EAAE,EAAGgB,aAA9C3G,EAVG,EAUHA,KAAMC,EAVH,EAUGA,KAAMC,EAVT,EAUSA,KAVT,EAWkB+F,EAAkB,EAAE,EAAE,GAA3CC,EAXG,EAWHA,KAAMC,EAXH,EAWGA,KAAMC,EAXT,EAWSA,KAXT,EAYwBP,EAAec,aAA1Cb,EAZG,EAYHA,OAAQC,EAZL,EAYKA,OAAQC,EAZb,EAYaA,OAGnBc,EAAS,IAAI9W,OAAW4W,EAAUpH,GACtCsH,EAAOC,SAASlU,IAAIqT,EAAKpV,KAAKC,GAAK,EAAGoV,EAAMC,GAC5CU,EAAOtT,SAASX,IAAImN,EAAMC,EAAMC,GAChC4G,EAAO9U,MAAMa,IAAIiT,EAAQC,EAAQC,GACjCc,EAAOtH,SAASwH,QAAU,IAC1BF,EAAOG,eAAgB,EACvBC,YAAYnU,IAAI+T,GAGhB,IAAIK,EAAO,IAAInX,aAAiBkU,EAAOhI,MAAMC,KAAM,GAAI,EAAU,SACjEgL,EAAKJ,SAASlU,IAAIqT,EAAMC,EAAMC,GAC9Be,EAAK3T,SAASX,IAAImN,EAAMC,EAAMC,GAC9BiH,EAAKnV,MAAMa,IAAIiT,EAAQC,EAAQC,GAC/BmB,EAAK3H,SAASwH,QAAU,IACxBG,EAAK3H,SAAS4H,aAAc,EAC5BF,YAAYnU,IAAIoU,GAGhB,IAAME,EAAe,IAAIrX,iBAAiC,EAAZ2W,YAAe,GAAI,IAC3DW,EAAa,IAAItX,OAAYqX,EAAc,IAAIrX,oBAAyB,CAACyP,MAAO,YACtF6H,EAAWrC,QAAUf,EAAO1H,QAAQC,eACpCyK,YAAYnU,IAAIuU,GAChBnM,OAAOmM,WAAaA,EAEpB,IAAMC,EAAiB,IAAIvX,iBAAqB,EAAG,GAAI,IACjDwX,EAAc,IAAIxX,OAAYuX,EAAe,IAAIvX,oBAAwB,CAACyP,MAAO,YACvF+H,EAAYhU,SAASX,IAAImN,EAAMC,EAAMC,GACrCsH,EAAYxV,MAAMa,IAAI8T,YAAaA,YAAaA,aAEhDa,EAAYtI,KAAO,mBACnBsI,EAAYvC,QAAUf,EAAO1H,QAAQE,gBACrCwK,YAAYnU,IAAIyU,GAChBrM,OAAOqM,YAAcA,G,0KDlDRC,E,WACjB,WAAYC,I,4FAAU,SAClBtX,KAAKsX,SAAWA,E,sDAqChBrB,EAAG,SAASsB,QACZpB,EAAIoB,QAEJtB,EAAG,OAAOuB,OACVvB,EAAG,OAAOwB,QAEVxB,EAAG,UAAUsB,U,4BAIbtB,EAAG,UAAUyB,MACbzB,EAAG,SAASyB,MAGZzB,EAAG,UAAUsB,QACbtB,IAAKzR,SACLyR,EAAG,UAAUyB,U,iCAjDbxB,EAAK,IAAIyB,aACTxB,EAAM,IAAIyB,QACVxB,EAAK,IAAIyB,WAAW7X,KAAKsX,UAEzBrB,EAAK,IAAI6B,OAAO,CACZC,QAAS,SACTC,eAAe,EACfC,OAAQ,CACJR,MAAO,CACHS,QAAS,wBACTC,KAAM,GACNC,SAAS,EACTC,MAAO,KAEXC,IAAK,CAAEJ,QAAS,kBAAmBK,MAAO,IAC1CC,MAAO,CAAEN,QAAS,mBAAoBC,KAAM,KAC5CM,IAAK,CAAEP,QAAS,2BAA4BE,SAAS,EAAMC,MAAO,KAClEK,OAAQ,CAAER,QAAS,qBAAsBE,SAAS,EAAMC,MAAO,KAC/DzJ,QAAS,CAAEsJ,QAAS,SAAUE,SAAS,EAAMC,MAAO,MAExDM,OAAQ,CACJ,CAAET,QAAS,YAAaD,OAAQ,CAAC,MAAO,QACxC,CACIC,QAAS,eACTD,OAAQ,CAAC,QAAS,UAAW,QAAS,YAG9CW,UAAW,CAAC,CAAEC,KAAM,QAASC,MAAO,CAAC,UAAW,QAAS,YACzDC,QAAS,CAAC7C,EAAIE,U,2tCE5BL4C,E,WACjB,WAAYC,I,4FAAM,SACdjZ,KAAKkZ,IAAM,IAAIC,IAAIC,IAEnBpZ,KAAKkZ,IAAIG,iBAAkB,E,oDAO1BJ,EAAMjK,GAAM,WAEOsK,SAASxF,EAAO1H,QAAQG,YAI5CvM,KAAKkZ,IACJvW,IAAImR,EAAQ,2BACZhF,KAAK,mBACLyK,UAAS,SAAClO,GACPyI,EAAOhG,wBAA0BzC,EACjCyF,EAAWgD,MAIM9T,KAAKkZ,IAAIM,UAAU,UAEvC7W,IAAImR,EAAQ,mBACZhF,KAAK,cACLyK,UAAS,SAAClO,GACPyI,EAAOlG,gBAAkBvC,EACzByI,EAAOjG,iBAAmB,CACtBV,UAAW9B,EACX+B,OAAQ/B,GAEZyF,EAAWgD,MAuBf,IAAM2F,EAAgBzZ,KAAKkZ,IAAIM,UAAU,WAEzCC,EACC9W,IAAImR,EAAOxG,kBAAmB,QAC9BwB,KAAK,oBACL4K,SACAH,UAAS,SAAClO,GACP,EAAKsO,cAAc,OAAQ,KAC3B7I,EAAWgD,MAEf2F,EACC9W,IAAImR,EAAOxG,kBAAmB,WAC9BwB,KAAK,mBACL4K,SACAH,UAAS,SAAClO,GACP,EAAKsO,cAAc,UAAW,KAC9B7I,EAAWgD,MAIf,IAAM8F,EAAc5Z,KAAKkZ,IAAIM,UAAU,aAGvCI,EACCjX,IAAImR,EAAO1H,QAAS,kBACpB0C,KAAK,eACL4K,SACAH,UAAS,SAAClO,GACPyF,EAAWgD,GACX/I,OAAOmM,WAAWrC,QAAUxJ,KAIhCuO,EACCjX,IAAImR,EAAO1H,QAAS,mBACpB0C,KAAK,qBACL4K,SACAH,UAAS,SAAClO,GACPyF,EAAWgD,GACX/I,OAAOqM,YAAYvC,QAAUxJ,KAIjCuO,EACCjX,IAAImR,EAAO1H,QAAS,KACpB/H,KAAK,EAAEiV,SAAS,MAChBlV,IAAIkV,SAAS,MACbxK,KAAK,YACL4K,SACAH,UAAS,SAAClO,GACPyI,EAAO1H,QAAQpH,EAAIqG,EACnB,EAAKwO,cACL/I,EAAWgD,MAGf8F,EACCjX,IAAImR,EAAO1H,QAAS,KACpB/H,KAAK,EAAEiV,SAAS,MAChBlV,IAAIkV,SAAS,MACbxK,KAAK,YACL4K,SACAH,UAAS,SAAClO,GACPyI,EAAO1H,QAAQjH,EAAIkG,EACnB,EAAKwO,cACL/I,EAAWgD,MAGf8F,EACCjX,IAAImR,EAAO1H,QAAS,KACpB/H,KAAK,EAAEiV,SAAS,MAChBlV,IAAIkV,SAAS,MACbxK,KAAK,YACL4K,SACAH,UAAS,SAAClO,GACPyI,EAAO1H,QAAQnH,EAAIoG,EACnB,EAAKwO,cACL/I,EAAWgD,MAGf8F,EACCjX,IAAImR,EAAQ,QAAS,EAAG,KACxBhF,KAAK,SACL4K,SACAH,UAAS,SAAClO,GACPyI,EAAO1H,QAAQxK,MAAQyJ,EACvBN,OAAOqM,YAAYxV,MAAMa,IAAI4I,EAAMA,EAAMA,GACzCyF,EAAWgD,MAIf9T,KAAKkZ,IAAIY,S,mCAOAC,EAASvR,EAAM6C,GAExB,GADAyF,EAAWgD,GACPkG,MAAMC,QAAQF,SAAqBjU,IAAT0C,GAA+B,KAATA,EAAa,WACxCuR,GADwC,IAC7D,2BAA8B,KAArBG,EAAqB,QACtBA,EAASpL,KAAKqL,WAAW3R,KACzB0R,EAASE,SAAS,GAAGvF,QAAUxJ,IAHsB,kC,oCASvDgP,EAASC,GAGnB,IAAMP,EAAUhP,OAAO+L,YAAYsD,SAEnCtJ,EAAWgD,GACX9N,OAAOuU,QAAQR,GAASS,SAAQ,SAACC,GAChBA,EAAI,GAAJ,KAAb,IACMJ,EAAUI,EAAI,GAAJ,aAEA3U,IAAZuU,GAAqC,MAAZA,EAEzBI,EAAI,GAAGrL,SAASwH,QAAU9C,EAAOxG,kBAAkBC,KAAO,EAAMuG,EAAOrG,mBACpD3H,IAAZuU,GAAqC,MAAZA,IAEhCI,EAAI,GAAGrL,SAASwH,QAAU9C,EAAOxG,kBAAkBE,QAAU,EAAMsG,EAAOrG,oB,oCAOlF,IAAMiN,EAAM3P,OAAOqM,YAAYhU,SADtB,EAEmBmS,EAAkBmF,EAAI1V,EAAE0V,EAAIvV,EAAEuV,EAAIzV,EAAGsR,aAA1D3G,EAFE,EAEFA,KAAMC,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,KACnB/E,OAAOqM,YAAYhU,SAASX,IAAImN,EAAMC,EAAMC,K,+DAQ5C9P,KAAKkZ,IAAIyB,UACT3a,KAAKkZ,IAAM,IAAIC,IAAIC,S,uNC1M3B,IAEqBwB,E,WACjB,WAAY1H,EAAO2H,I,4FAAU,SACzB7a,KAAKkT,MAAQA,EACblT,KAAK4B,MAAQ2U,YAEbxS,QAAQuS,IAAI,oBAAqBxC,EAAO5G,aAAaC,gBAEpCrH,IAAb+U,GAAwBA,I,0DAIrB1N,GAAW,WAClBnH,OAAOuU,QAAQpN,GAAWqN,SAAQ,SAACM,QACnBhV,IAARgV,GACA,EAAK7P,OAAO6P,EAAI,S,6BAMrBC,GACH,IAAMvE,EAAWxW,KAAKgb,eAAeD,EAASvE,UACxCpH,EAAWpP,KAAKib,eAAeF,EAAS3L,UAE9CA,EAAS8L,SAASC,cAAgB,IAAIvb,QAAY,SAClDwP,EAAS8L,SAASE,gBAAkBtH,EAAOlG,iBAAmBkG,EAAOjG,iBAAiBV,UACtFiC,EAAS8L,SAASG,iBAAmBjM,EAASE,SAASgM,SACvDlM,EAASkL,UAAW,EACpBlL,EAAS4H,aAAc,EAEvB,IAAM/E,EAAK8I,EAAS9I,IAAM,IAAOvR,KAAK6a,MAAM,IAAM7a,KAAK8a,UACjDnB,EAA8BvU,MAApBiV,EAASV,QAAuB,IAAMU,EAASV,QACzDrL,EAAO,IAAIpP,OAAW4W,EAAUpH,GAIhCqM,EAAY,OAASxJ,EAAGyJ,WAAWC,UAAU,EAAG,GAAK,MAoB3D,GAlBA3M,EAAKF,KAxCW,YAwCcmD,EAC9BjD,EAAKqL,QAAUA,EAEM,MAAjBrL,EAAKqL,QAELjL,EAASwH,QAAU9C,EAAOxG,kBAAkBE,QAAU,EAAMsG,EAAOrG,cAC3C,MAAjBuB,EAAKqL,UAEZjL,EAASwH,QAAU9C,EAAOxG,kBAAkBC,KAAO,EAAMuG,EAAOrG,eAIpEzN,KAAK4b,eAAe3J,GAGpBlH,OAAO+L,YAAYnU,IAAIqM,QAGGlJ,IAAtBiV,EAAS3X,SAAwB,OAChB2X,EAAS3X,SADO,EAILmS,EAJK,EACzBvQ,EADyB,EACtBG,EACDnF,KAAK6b,WAAWd,GAE2B/a,KAAK4B,OAAnDgO,EAJ0B,EAI1BA,KAAMC,EAJoB,EAIpBA,KAAMC,EAJc,EAIdA,KAJc,EAKC2F,EAAezV,KAAK4B,OAA/C8T,EAL0B,EAK1BA,OAAQC,EALkB,EAKlBA,OAAQC,EALU,EAKVA,OAEvB5G,EAAK5L,SAASX,IAAImN,EAAMC,EAAMC,GAC9Bd,EAAKpN,MAAMa,IAAIiT,EAAQC,EAAQC,GAInC,GAAyB9P,MAArBiV,EAASpE,SAAuB,OACZoE,EAASpE,SAArB3R,EADwB,EACxBA,EAAGG,EADqB,EACrBA,EAAGF,EADkB,EAClBA,EADkB,EAMJ4Q,EAJd7Q,EAAI,IAAO,EAAItE,KAAKC,GACpBwE,EAAI,IAAO,EAAIzE,KAAKC,GACpBsE,EAAI,IAAO,EAAIvE,KAAKC,IAE3BmV,EANyB,EAMzBA,KAAMC,EANmB,EAMnBA,KAAMC,EANa,EAMbA,KACnBhH,EAAK2H,SAASlU,IAAIqT,EAAMC,EAAKC,GAI7BlC,EAAO3D,OAAOhK,UAAS6I,EAAK6H,eAAgB,GAGhDxC,EApFgB,EAoFU,CAAEpC,GAAI8I,EAAS9I,GAAInD,KAAM2M,GAAazM,EAAM8E,EAAOjG,iBAAiBV,WAE9FpJ,QAAQuS,IAAI,WAAYtH,EAAKF,Q,qCAGlBgN,GACX,GAAchW,MAAVgW,EAAEtT,KAAmB,MAAM,IAAIuT,UAAU,oBAE7C,GAAc,eAAVD,EAAEtT,KACF,OAAOxI,KAAKgc,kBAAkBF,EAAErJ,MAAOqJ,EAAE1G,OAAQ0G,EAAEG,OAEhD,GAAc,oBAAVH,EAAEtT,KACT,OAAOxI,KAAKkc,uBAAuBJ,EAAEK,UAAWL,EAAEM,aAAcN,EAAE1G,QAE/D,GAAc,kBAAV0G,EAAEtT,KACT,OAAOxI,KAAKqc,qBAAqBP,EAAE1W,QAEvC,MAAM,IAAI2W,UAAU,+B,wCAINtJ,EAAO2C,EAAQ6G,GAC7B,GAAanW,MAAT2M,EAAoB,MAAM,IAAIsJ,UAAU,qBAC5C,GAAcjW,MAAVsP,EAAqB,MAAM,IAAI2G,UAAU,sBAC7C,GAAajW,MAATmW,EAAoB,MAAM,IAAIF,UAAU,qBAG5C,OAAO,IAAInc,cAAkB6S,EAAO2C,EAAQ6G,K,6CAGzBE,EAAWC,EAAchH,GAC5C,GAAiBtP,MAAbqW,EAAwB,MAAM,IAAIJ,UAAU,yBAChD,GAAoBjW,MAAhBsW,EAA2B,MAAM,IAAIL,UAAU,4BACnD,GAAcjW,MAAVsP,EAAqB,MAAM,IAAI2G,UAAU,sBAG7C,IAAMO,EAAiBA,GAAkB,EACnCC,EAAiBA,GAAkB,GAEzC,OAAO,IAAI3c,mBAAuBuc,EAAWC,EAAchH,EAAQmH,EAAgBD,K,2CAGlElX,GACjB,GAAcU,MAAVV,EAAqB,MAAM,IAAI2W,UAAU,sBAG7C,IAAMS,EAAgBA,GAAiB,GACjCF,EAAiBA,GAAkB,GACzC,OAAO,IAAI1c,iBAAqBwF,EAAQoX,EAAeF,K,qCAG5CG,GACX,MAAc,qBAAVA,EAAEjU,KAEK,IAAI5I,oBAAwB6c,EAAEC,YACpB,sBAAVD,EAAEjU,KAEF,IAAI5I,qBAAyB6c,EAAEC,YACrB,qBAAVD,EAAEjU,KAEF,IAAI5I,oBAAwB6c,EAAEC,YACpB,wBAAVD,EAAEjU,KAEF,IAAI5I,uBAA2B6c,EAAEC,aACjCD,EAAEjU,KAEF,IAAI5I,uBAA2B6c,EAAEC,e,iCAOrC3B,GAEP,OAA2BjV,MAAvBiV,EAAS3X,SAAS6B,OACea,IAA7BiV,EAASvE,SAASpB,OAEX2F,EAASvE,SAASpB,OAAS,OACEtP,IAA7BiV,EAASvE,SAASpR,OAElB2V,EAASvE,SAASpR,OAEtB,EAGJ2V,EAAS3X,SAAS6B,I,qCAGdgN,GAGX,IAAMnD,EAhLU,YAgLemD,EACzB8I,EAAWhQ,OAAO+L,YAAY6F,gBAAgB7N,QAEnChJ,IAAbiV,IACAhQ,OAAO+L,YAAY/B,OAAOgG,GAC1BjG,EAAY2F,IAAI,IAChB1W,QAAQuS,IAAI,WAAYxH,M,kCAM5B,IAAMiL,EAAUhP,OAAO+L,YAAYsD,SAEnCpU,OAAOuU,QAAQR,GAASS,SAAQ,SAACC,GAC7B,IAAM3L,EAAO2L,EAAI,GAAJ,KAET3L,EAAKqL,WAjMG,eAkMRpW,QAAQuS,IAAI,WAAYxH,GACxB/D,OAAO+L,YAAY/B,OAAO0F,EAAI,a,sMCnM9C,IAAImC,EAAYC,EAAQ,IAARA,CAA4Bjd,GAIvBkd,E,WACjB,WAAY5J,I,4FAAO,SACflT,KAAKkT,MAAQA,EACblT,KAAK4B,MAAQ2U,YACbxS,QAAQuS,IAAI,iBAAkBxC,EAAO5G,aAAaE,Q,2DAG1C6E,EAAI8K,EAAGC,EAAGC,EAAGpC,GACrB,IAAIqC,EAAInS,OAAO+L,YAAY6F,gBAVd,SAU6C1K,GAO1D,YANUnM,IAANoX,GACAA,EAAE9N,SAASC,MAAM8N,OAAOJ,EAAI,IAAKC,EAAI,IAAKC,EAAI,KAE7B,OAAbpC,GAAmBA,EAAS,YACZ,OAAbA,GAAmBA,EAAS,aAEhCqC,I,6BAGJjL,EAAIjN,EAAGG,EAAGiY,GAAiC,IAAxB/C,EAAwB,uDAAd,IAAIQ,EAAU,uCAC1CqC,EAAInS,OAAO+L,YAAY6F,gBArBd,SAqB6C1K,GACpDoL,EAAUvJ,EAAO5G,aAAaE,OAEpC,QAAUtH,IAANoX,EAGA,GAAI7C,IAAYgD,GAAuB,MAAZA,EAAiB,CAGxCrY,EAAItE,KAAK2D,IAAI3D,KAAK0D,IAAIY,EAAG8O,EAAOhI,MAAME,MAAO8H,EAAOhI,MAAMG,MAC1D9G,EAAIzE,KAAK2D,IAAI3D,KAAK0D,IAAIe,EAAG2O,EAAOhI,MAAMI,MAAO4H,EAAOhI,MAAMK,MAC1D,IAAMyK,EAAU,EAEZ0G,EAAS,IAAIV,EACjBU,EAAOC,KAAK,6BAA6B,SAAU/G,EAAUtD,GACzD,IAAM9D,EAAW,IAAIxP,uBACjB,CAAEyP,MAAO,QAASuH,QAASA,EAAQI,aAAa,IAChD5H,EAAS8L,SAASC,cAAgB,IAAIvb,QAAY,SAClDwP,EAAS8L,SAASE,gBAAkBtH,EAAOlG,iBAAmBkG,EAAOjG,iBAAiBT,OACtFgC,EAASkL,UAAW,EAEpB,IAAM1Y,EAAQmJ,OAAOwL,aAAe,GAPwB,EAShChB,EAAkBvQ,EAAEG,EAAG,EAAGvD,GAA/CgO,EATqD,EASrDA,KAAMC,EAT+C,EAS/CA,KAAMC,EATyC,EASzCA,KATyC,EAUhC+F,EAAkB,EAAE,EAAE,GAA3CC,EAVqD,EAUrDA,KAAMC,EAV+C,EAU/CA,KAAMC,EAVyC,EAUzCA,KAVyC,EAW1BP,EAAe7T,GAA1C8T,EAXqD,EAWrDA,OAAQC,EAX6C,EAW7CA,OAAQC,EAXqC,EAWrCA,OAGnBsH,EAAI,IAAItd,OAAW4W,EAAUpH,GACjC8N,EAAErG,eAAgB,EAClBqG,EAAEM,QAAUvL,EACZiL,EAAEpO,KApDL,SAoD2BmD,EACxBiL,EAAEtb,MAAMa,IAAIiT,EAAQC,EAAQC,GAC5BsH,EAAE9Z,SAASX,IAAImN,EAAMC,EAAMC,GAC3BoN,EAAEvG,SAASlU,IAAIqT,EAAMC,EAAMC,GAC3BkH,EAAE7C,QAAUA,EAEI,MAAZA,EAEAjL,EAASwH,QAAU9C,EAAOxG,kBAAkBE,QAAU,EAAMsG,EAAOrG,cAChD,MAAZ4M,IAEPjL,EAASwH,QAAU9C,EAAOxG,kBAAkBC,KAAO,EAAMuG,EAAOrG,eAGpE1C,OAAO+L,YAAYnU,IAAIua,GAEvBA,EAAEO,WAAa,SAAUhB,GACrB1R,OAAO2S,MAAMC,MAAMlB,IAIvBpI,EAzEH,EAyE0B,CAAEpC,KAAInD,KAAMoO,EAAEpO,MAAQoO,EAAGpJ,EAAOjG,iBAAiBT,QAExErJ,QAAQuS,IAAR,6BAAkCrE,EAAlC,gBAA4CjN,EAA5C,eAAoDG,EAApD,qBAAkEiY,EAAlE,uBAAwF/C,SAGvEvU,IAAb+U,GAAwBA,EAAS,mBAGzC9W,QAAQ6Z,MAAR,qCAA4C3L,EAA5C,sBAA4DoI,EAA5D,aAAwEgD,SAGtEhD,IAAYgD,GAAuB,MAAZA,GAG7Brd,KAAK6d,WAAW5L,EAAIoI,QAEHvU,IAAb+U,GAAwBA,EAAS,aAIrC7a,KAAA,OAAYiS,QAEKnM,IAAb+U,GAAwBA,EAAS,YAEzC,OAAOqC,I,6BAGJjL,EAAI4I,GACP,QAAW/U,IAAPmM,EAAkB,CAClB,IAAIiL,EAAInS,OAAO+L,YAAY6F,gBAtGtB,SAsGqD1K,QAEhDnM,IAANoX,GACAhK,MAAM6B,OAAOmI,GACbnZ,QAAQuS,IAAI,eAAgBrE,GAC5B6C,EAAY2F,IAAI,SACC3U,IAAb+U,GAAwBA,EAAS,iBACjB/U,IAAb+U,GAAwBA,EAAS,uBACxB/U,IAAb+U,GAAwBA,EAAS,sB,kCAK5C,IAAMd,EAAUhP,OAAO+L,YAAYsD,SAEnCpU,OAAOuU,QAAQR,GAASS,SAAQ,SAACC,GAC7B,IAAM3L,EAAO2L,EAAI,GAAJ,KAET3L,EAAKqL,WAxHJ,YAyHDpW,QAAQuS,IAAI,WAAYxH,GACxBgG,EAAY2F,EAAI,IAChB1P,OAAO+L,YAAY/B,OAAO0F,EAAI,U,6BAKnCxI,GAEH,OADQlH,OAAO+L,YAAY6F,gBAjIlB,SAiIiD1K,K,2BAIzDA,EAAIjN,EAAGG,EAAGiY,EAASvC,GACpB,IAAIqC,EAAInS,OAAO+L,YAAY6F,gBAtIlB,SAsIiD1K,GAC1D,QAAUnM,IAANoX,EAAiB,CACjB,IAAMY,EAAiBZ,EAAEvG,SAASxR,EAC5B4Y,GAAcX,EAAU,IAAMxd,OAAWoe,QAC3C5a,EAAW,CAAE4B,EAAGkY,EAAE9Z,SAAS4B,EAAGG,EAAG+X,EAAE9Z,SAAS6B,EAAGmY,QAASF,EAAEvG,SAASxR,GAIjE8Y,EAAeH,EAAiBC,GAAc,EAGpD/Y,EAAItE,KAAK2D,IAAI3D,KAAK0D,IAAI1D,KAAKwd,MAAU,GAAJlZ,GAAU,GAAI8O,EAAOhI,MAAME,MAAO8H,EAAOhI,MAAMG,MAChF9G,EAAIzE,KAAK2D,IAAI3D,KAAK0D,IAAI1D,KAAKwd,MAAU,GAAJ/Y,GAAU,GAAI2O,EAAOhI,MAAMI,MAAO4H,EAAOhI,MAAMK,MAChFiR,EAAU1c,KAAKwd,MAAgB,GAAVd,GAAgB,GAZpB,MAcW7H,EAAkBvQ,EAAEG,EAAG,EAAGvD,OAA/CgO,EAdU,EAcVA,KAAMC,EAdI,EAcJA,KAdI,KAcEC,KACS+F,EAAkB,EAAE,EAAE,IAiClD,OAhDiB,EAeVC,KAfU,EAeJC,KAfI,EAeEC,KAQF,IALAtV,KAAKwE,KAAKxE,KAAKsI,IAAI4G,EAAOxM,EAAS4B,EAAG,GAAKtE,KAAKsI,IAAI6G,EAAOzM,EAAS+B,EAAG,IAMxE,IAAIoJ,IAAM4P,MAAM/a,GAC3Bgb,GAAG,CAAEpZ,EAAG4K,EAAMzK,EAAG0K,EAAMuN,QAASW,GAAc,KAE9CM,UAAS,WACNnB,EAAE9Z,SAAS4B,EAAI5B,EAAS4B,EACxBkY,EAAE9Z,SAAS+B,EAAI/B,EAAS+B,EAEpB8Y,IACAf,EAAEvG,SAASxR,EAAI/B,EAASga,YAK/BkB,YAAW,WAERpB,EAAEvG,SAASxR,EAAI/B,EAASga,QACR,MAAZvC,GAAkBA,EAAS,cAElC0D,MAAM,IACNhH,QAGD2F,EAAEvG,SAASxR,EAAI4Y,EAEZb,EAES,MAAZrC,GAAkBA,EAAS,e,sCAIvB5I,GACZ,IAAIiL,EAAInS,OAAO+L,YAAY6F,gBA9LlB,SA8LiD1K,GAC1D,YAAUnM,IAANoX,GACAnZ,QAAQuS,IAAR,UAAe4G,EAAE9Z,SAAS4B,EAA1B,YAA+BkY,EAAE9Z,SAAS+B,EAA1C,YAA+C+X,EAAE9Z,SAAS6B,IACnDiY,GAEJ,O,+BAIP3O,IAAM/J,W,sCAGMwK,GACZ,OAAO,IAAIwP,SAAQ,SAACC,EAASC,GAMzBD,GAJY1T,OAAOyB,KAAKmS,QACpB5T,OAAOkC,QAAU,uBACjB2D,KAAKK,UAAU,CAAEgB,GAAIjD,EAAKwO,iB,4BAMhCxO,GAEF,IAII4P,EAJEC,EAAO9Y,SAAS+Y,cAAc,YAC9BC,EAAchZ,SAASiZ,eAAe,eACxCC,EAAUlZ,SAASsL,cAAc,OACrC4N,EAAQC,aAAa,KAAM,eAEvBpL,EAAOhG,yBACP8Q,EAAc7Y,SAASoZ,eAAT,UAA2BnQ,EAAKF,KAAhC,yBACd9O,KAAKof,gBAAgBpQ,IAErB4P,EAAc7Y,SAASoZ,eAAT,UAA2BnQ,EAAKF,OAElDmQ,EAAQjM,YAAY4L,GACpBC,EAAKQ,aAAaJ,EAASF,GAC3BF,EAAK3M,MAAMoN,QAAU,QACrBC,YAAW,WACPV,EAAK3M,MAAM0E,QAAU,MACrBiI,EAAK3M,MAAMoN,QAAU,SACtB,U,gCCjPXE,EAAM3C,EAAQ,KAUlB,SAAS4C,EAAYC,EAAWC,GAC5B,IARIC,EAQAC,EAAeF,EAInB,OAHI5U,OAAO6B,SAASC,KAAKiT,QAAQJ,IAAc,IAC3CG,GAVAD,EAAO,GACC7U,OAAO6B,SAASC,KAAKkT,QAAQ,2BAA2B,SAAUtD,EAAGuD,EAAK3U,GAClFuU,EAAKI,GAAO3U,KAETuU,GAMyBF,IAEzBG,EAGJ,SAASI,IAIZ,IAAMC,EAAoBxT,aAAaC,QAAQ5G,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,gBAChFqT,EAAWV,EAAY,YAAY,GACnCW,EAAWX,EAAY,YAAY,GACnCO,EAAMP,EAAY,OAAO,GACzBxS,EAAUwS,EAAY,WAAW,GACjC1S,EAAO0S,EAAY,QAAQ,GAC3BhT,EAASgT,EAAY,UAAU,GAgBrC,OAuBA1b,QAAQuS,IAAI,SArCZiJ,YAAW,YACQ,IAAX9S,GACAC,aAAasE,QAAQjL,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,UAAWL,IAE3D,IAAZQ,GACAP,aAAasE,QAAQjL,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,WAAYG,IAE/D,IAATF,GACAL,aAAasE,QAAQjL,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,QAASC,IAE7D,IAARiT,GACAtT,aAAasE,QAAQjL,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,OAAQkT,KAEzE,MACc,IAAbG,IAAmC,IAAbC,GAA4C,OAAtBF,EACrCtP,KAAKC,MAAMqP,IACE,IAAbC,IAAmC,IAAbC,GAC7B1T,aAAasE,QACTjL,SAAS6G,SAASC,KAAKC,MAAM,KAAK,GAAK,eACvC8D,KAAKK,UAAU,CACXkP,WACAC,cAGD,CACHD,WACAC,cAEW,IAARJ,EAuBf,WACI,IAEI,OADcR,EAAIa,OAAOC,MAAO,2BAElC,MAAOC,GAGL,OADAxc,QAAQuS,IAAI,gBACJ,GA5BDkK,IAEC,E,sKChDhB,ICgBI/Q,EDgBiBgR,E,WACjB,WAAYvN,EAAO4D,GAAa,Y,4FAAA,SAC5B9W,KAAK8W,YAAcA,EACnB9W,KAAKkT,MAAQA,EACblT,KAAK0d,MAAQ,IAAIZ,EAAM5J,GACvBlT,KAAKmN,UAAY,IAAIyN,EAAS1H,GAE9BlT,KAAK0gB,gBACL,IAAMC,EAAcV,IAEpB,IAAqB,IAAjBU,EACAhD,MAAM,mEACH,KACKwC,EAAuBQ,EAAvBR,SAAUC,EAAaO,EAAbP,SAEZQ,EAAY,UAAYlgB,KAAK8a,SAASE,SAAS,IAAIC,UAAU,EAAG,IACtE3b,KAAK6gB,OAAS,IAAIC,IAAKC,OAAOjN,EAAOtH,KAAKC,OAAQqH,EAAOtH,KAAKO,KAAM+G,EAAOtH,KAAKQ,KAAM4T,GAEtF7V,OAAOyB,KAAOxM,KAAK6gB,OAEnB7gB,KAAK6gB,OAAOG,QAAQ,CAChBC,SAAUd,EACVC,SAAUA,EACVc,WAAW,EACXC,QAAQ,EACRC,cAAc,EACdC,UAAW,WACPtd,QAAQuS,IAAI,mBAGZ,EAAKgL,UAtDU,qBAuDf,EAAKA,UAtDe,uBAwDpB,EAAKA,UA9DE,gBA+DP,EAAKA,UA9DE,gBA+DP,EAAKA,UA9DK,uBAgEV,EAAKA,UA/CE,mBAgDP,EAAKA,UApDI,aAqDT,EAAKA,UApDM,oBAqDX,EAAKA,UApDU,wBAqDf,EAAKA,UAhDW,kBAiDhB,EAAKA,UA9CS,gBAiDd,EAAK3C,QA9DM,cA8D0B7K,EAAO5G,aAAaC,WAGzD,EAAKwR,QApEC,sBAoE0B7K,EAAO5G,aAAaE,QAGpDrC,OAAO2S,MAAQ,EAAKA,MACpB3S,OAAOoC,UAAY,EAAKA,UAExB,EAAK0T,OAAOU,iBAAmB,EAAKA,iBACpC,EAAKV,OAAOW,iBAAmB,EAAKA,kBAExCC,UAAW,WACP1d,QAAQuS,IAAI,2BACZqH,MAAM,gC,+DAOlB,IAAM+D,EAAc3W,OAAO6B,SAAS+U,KAQpC,MAPoB,IAAfD,EAAsBA,EAAYne,OAAS,EAE5CwH,OAAOkC,QAAUyU,EAAY5U,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEtD/B,OAAOkC,QAAU6G,EAAOtH,KAAKS,QAEjClJ,QAAQuS,IAAI,iBAAkBvL,OAAOkC,QAASyU,IACvC,I,uCAGME,GACoB,IAA7BA,EAAeC,YACf9d,QAAQuS,IAAI,0BAA4BsL,EAAeE,cACvD/d,QAAQuS,IAAI,yB,uCAIHyL,GACb,IAAMC,EAAMD,EAAOE,cAAcC,OAC3BC,EAAIJ,EAAOK,gBACXC,EAAQF,EAAExG,UAAUwG,EAAErC,QAAQ,KAAO,GAI3C,GAxHmB,gBAwHfuC,EACA,IACI,IAAMtR,EAAOH,KAAKC,MAAMmR,GACxBjX,OAAO2S,MAAMzS,OAAO8F,EAAKkB,GAAIlB,EAAK/L,EAAG+L,EAAK5L,EAAG4L,EAAKqM,QAASrM,EAAKsJ,SAClE,MAAO7I,GACLzN,QAAQ6Z,MAAMpM,QAEf,GA9HY,gBA8HR6Q,EACP,IACI,IAAItR,EAAOH,KAAKC,MAAMmR,GACtBjX,OAAO2S,MAAP,OAAoB3M,EAAKkB,IAC3B,MAAOT,GACLzN,QAAQ6Z,MAAMpM,QAEf,GAhIyB,uBAgIrB6Q,GAjIgB,qBAiI4BA,EAGnD,IACI,IAAMtR,EAAOH,KAAKC,MAAMmR,GAClB3E,EAAUvJ,EAAO5G,aAAaE,OAIpC,GAAYtH,MAARiL,EAEA,IAAK,IAAMuR,KAAKvR,EAAM,OACYA,EAAKuR,GAA3BrQ,EADU,EACVA,GAAIjN,EADM,EACNA,EAAGG,EADG,EACHA,EAAGiY,EADA,EACAA,QACZ/C,EAA6BvU,MAAnBiL,EAAKuR,GAAGjI,QAAuB,IAAMtJ,EAAKuR,GAAGjI,QAEzDA,IAAYgD,GAAuB,MAAZA,EAEQvX,MAA3BiF,OAAO2S,MAAM6E,OAAOtQ,GACpBlH,OAAO2S,MAAMzS,OAAOgH,EAAIjN,EAAGG,EAAGiY,EAAS/C,IAEvCtP,OAAO2S,MAAM8E,KAAKvQ,EAAIjN,EAAGG,EAAGiY,GAC5BrS,OAAO2S,MAAMG,WAAW5L,EAAIoI,IAIhCqD,MAAK,OAAQzL,IAI3B,MAAOT,GACLzN,QAAQ6Z,MAAMpM,QAGf,GAxJc,aAwJV6Q,EAEP,IACI,IAAMtR,EAAOH,KAAKC,MAAMmR,GACxBjX,OAAOoC,UAAUsV,WAAW1R,GAC9B,MAAOS,GACLzN,QAAQ6Z,MAAMpM,QAGf,GAhKgB,oBAgKZ6Q,EAAiC,CAExC,IAAMtR,EAAOH,KAAKC,MAAMmR,GACxBje,QAAQuS,IAAIvF,GACZhG,OAAOoC,UAAUyO,eAAe7K,EAAKkB,SAElC,GArKoB,wBAqKhBoQ,EAEPtX,OAAOoC,UAAUuV,iBAEd,GAvKY,mBAuKRL,EACP,IACI,IAAMtR,EAAOH,KAAKC,MAAMmR,GACxBjX,OAAO2S,MAAMiF,YAAY5R,EAAKkB,GAAIlB,EAAKgM,EAAGhM,EAAKiM,EAAGjM,EAAKkM,GACzD,MAAOzL,GACLzN,QAAQ6Z,MAAMpM,QAGf,GAhMe,uBAgMX6Q,GAIP,GAAW,UAAPL,EAAiB,CACjB,IAAMvF,EAAI,sBAAwBuF,EAAIlV,MAAM,KAAK,GAC3CqV,EAAI,IAAoB,GAAbH,EAAIze,OAEfsb,EAAO9Y,SAAS+Y,cAAc,YACpCD,EAAKlM,UAAY8J,EACjBoC,EAAK3M,MAAMoN,QAAU,QAErBC,YAAW,WACPxZ,SAAS+Y,cAAc,YAAY5M,MAAMoN,QAAU,SACpD6C,SAEJ,GA5LqB,kBA4LjBE,EACP,GAAY,YAARL,EACAje,QAAQuS,IAAI,wBACZ1J,SAASgW,cACN,GAAIZ,EAAI7H,WAAW,OAAQ,CAC9B,IAAMsC,EAAI,WAAauF,EAAIrG,UAAU,GAC/BwG,EAAI,IAAkB,GAAX1F,EAAElZ,OAIbsb,EAAO9Y,SAAS+Y,cAAc,YACpCD,EAAKlM,UAAY8J,EACjBoC,EAAK3M,MAAMoN,QAAU,QAErBC,YAAW,WACPxZ,SAAS+Y,cAAc,YAAY5M,MAAMoN,QAAU,SACpD6C,QAEHpe,QAAQuS,IAAI,eAAgB0L,QAG7B,GAAIA,EAAI7H,WAAW,OAAQ,CAC9B,IAAMsC,EAAI,WAAauF,EAAIrG,UAAU,GAC/BwG,EAAI,IAAkB,GAAX1F,EAAElZ,OAIbsb,EAAO9Y,SAAS+Y,cAAc,YACpCD,EAAKlM,UAAY8J,EACjBoC,EAAK3M,MAAMoN,QAAU,QAErBC,YAAW,WACPxZ,SAAS+Y,cAAc,YAAY5M,MAAMoN,QAAU,SACpD6C,M,gCAMDE,EAAOxH,GACb,IAAMgI,EAAW9X,OAAOkC,QAAU,IAAMoV,EACxCriB,KAAK6gB,OAAOS,UAAUuB,GACtB9e,QAAQuS,IAAI,mBAAoBuM,GAChB,MAAZhI,GAAkBA,M,8BAGlBwH,EAAOS,EAASjI,GACpB,IAAIkI,EAAU,IAAIjC,IAAKkC,QAAQF,GACzBG,EAAWlY,OAAOkC,QAAU,IAAMoV,EACxCU,EAAQX,gBAAkBa,EAC1BjjB,KAAK6gB,OAAOqC,KAAKH,GACjBhf,QAAQuS,IAAI,kBAAmB2M,GAEf,MAAZpI,GAAkBA,S,sMCvPZ,IAAIjb,YACR,IAAIA,UADlB,IAIqBujB,E,WACjB,WAAYhQ,GAAW,Y,4FAAA,SACnBnT,KAAKmT,UAAYA,EAEbpI,OAAO0I,mBACPK,EAAOzF,IAAMtD,OAAO0I,kBAIpBK,EAAOpG,MAKX3C,OAAOmI,MAAQ,IAAItT,QACnBmL,OAAOwL,YAAczC,EAAOlS,MAG5BmJ,OAAOsC,gBAAkByG,EAAOzG,gBAGhCtC,OAAOuM,SAAW,IAAIrE,EAASC,MAAOC,GAAWC,cAMjD3D,EAAS,IAAI7P,SAEbsT,MAAMvQ,IAAI8M,GAGVzP,KAAKojB,MAAQ,IAAIpO,EAAM9B,OACvBlT,KAAKyP,OAASA,EAEC,CAAC,UAAW,cAAe,QAAS,QAC5C+K,SAAQ,SAAC4I,GAAD,OAAW,EAAKA,MAAMC,MAAMD,MAE3C,IAAItM,EAAc,IAAIlX,QACtBsT,MAAMvQ,IAAImU,GACV/L,OAAO+L,YAAcA,EAErB,IAAIwM,EAAS,IAAIC,SAAe,CAAEjM,kBAAU7H,WAE5CzP,KAAKwM,KAAO,IAAIiU,EAAWvN,MAAO4D,GAG9BhD,EAAOpG,OAASoG,EAAOnG,iBACvB3N,KAAKwjB,MAAQ,IAAInM,GAIjBvD,EAAOlG,kBACP5N,KAAKyjB,cVtFF,WACX,IAAMnM,EAAW,IAAIoM,IAYrB,OAXApM,EAAS5D,QAAQ3I,OAAO4I,WAAY5I,OAAO6I,aAC3C0D,EAAS1R,WAAWsM,MAAM9O,SAAW,WACrCkU,EAAS1R,WAAWsM,MAAMrO,IAAM,MAChCyT,EAAS1J,gBAAkBkG,EAAOlG,gBAClC0J,EAASqM,wBAA0B7P,EAAOjG,iBAAiBV,UAC3DmK,EAASsM,qBAAuB9P,EAAOjG,iBAAiBT,OACxDkK,EAASrD,WAAa,WAClBqD,EAAS5D,QAAQ3I,OAAO4I,WAAY5I,OAAO6I,cAE/C7N,SAASwD,iBAAiB,oBAAoB,kBAAM+N,EAASrD,gBAAc,GAC3ElJ,OAAOxB,iBAAiB,UAAU,kBAAM+N,EAASrD,gBAAc,GACxDqD,EUyEsBuM,GACrB9Y,OAAO0Y,cAAgBzjB,KAAKyjB,cAC5BzjB,KAAKmT,UAAUH,YAAYhT,KAAKyjB,cAAc7d,aAI9CkO,EAAOpG,QACP1N,KAAKkZ,IAAM,IAAIF,EAAOhZ,OAG1BujB,aAAmB,CAAED,OAAQA,IAAUQ,MAAK,SAACC,GAqBzC,EAAKC,YAAc,IAAI3N,EAInBvC,EAAOpG,QAKP,EAAKwL,IAAIqE,KAAK,GACd,EAAKrE,IAAI+K,QAGb,IAAIC,EAAgB,IAAIX,gBAAsB,CAE1CY,WAAY,mCACZC,aAActN,IAGlBiN,EAAWM,YAAYH,GAGvB,IAAII,EAAe,EACnBC,uBAAsB,SAASC,EAAQC,GAEnCF,sBAAsBC,GAEtBF,EAAeA,GAAgBG,EAAU,IAAO,GAChC/jB,KAAK2D,IAAI,IAAKogB,EAAUH,GACxCA,EAAeG,EAGfV,EAAWvf,OAAO8e,EAAO1d,YAQrBkO,EAAOpG,OAASoG,EAAOnG,eAK3B2J,SAASlD,OAAOlB,MAAOzD,GAGnBqE,EAAOlG,gBACP7C,OAAO0Y,cAAc7d,WAAW8e,QAAS,EAEzC3Z,OAAO0Y,cAAc7d,WAAW8e,QAAS,EAKzC5Q,EAAOpG,OAASoG,EAAOnG,eAQ3BY,IAAM/J,eAKdxE,KAAKmT,UAAU2L,cAAc,YAAY5M,MAAMoN,QAAU,OAGzDvU,OAAOxB,iBAAiB,QAASvJ,KAAK2kB,qBAAqB,G,mEAuF3Czb,GAChBA,EAAMC,mB,0CA+CUD,GAChBA,EAAMC,sB,wCC7Td,WAEI,GAAKyb,EAASxT,MAEP,CACH,IAAM+B,EAAYpN,SAASiZ,eAAe,gBAC1C,IAAImE,EAAKhQ,QAHTyR,EAAS/R,sBAOjBoC,K","file":"0.app.js","sourcesContent":["module.exports = function (THREE) {\n    var MOUSE = THREE.MOUSE;\n    if (!MOUSE) MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    /*global THREE, console */\n\n    function OrbitConstraint(object) {\n        this.object = object;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        // and where it pans with respect to.\n        this.target = new THREE.Vector3();\n\n        // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // Limits to how far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var EPS = 0.000001;\n\n        // Current position in spherical coordinate system.\n        var theta;\n        var phi;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // API\n\n        this.getPolarAngle = function () {\n            return phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n\n        this.rotateLeft = function (angle) {\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n            phiDelta -= angle;\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = (function () {\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in distance in world space to move up\n        this.panUp = (function () {\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                scope.panLeft((2 * deltaX * targetDistance) / screenHeight);\n                scope.panUp((2 * deltaY * targetDistance) / screenHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                // orthographic\n                scope.panLeft((deltaX * (scope.object.right - scope.object.left)) / screenWidth);\n                scope.panUp((deltaY * (scope.object.top - scope.object.bottom)) / screenHeight);\n            } else {\n                // camera neither orthographic or perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            }\n        };\n\n        this.dollyIn = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.dollyOut = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.update = (function () {\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat.clone().inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n                var position = this.object.position;\n\n                offset.copy(position).sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n\n                theta = Math.atan2(offset.x, offset.z);\n\n                // angle from y-axis\n\n                phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n                theta += thetaDelta;\n                phi += phiDelta;\n\n                // restrict theta to be between desired limits\n                theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this.target.add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(this.target).add(offset);\n\n                this.object.lookAt(this.target);\n\n                if (this.enableDamping === true) {\n                    thetaDelta *= 1 - this.dampingFactor;\n                    phiDelta *= 1 - this.dampingFactor;\n                } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(this.object.position) > EPS ||\n                    8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n    }\n\n    // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n    // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n    // supported.\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n    function OrbitControls(object, domElement) {\n        var constraint = new OrbitConstraint(object);\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // API\n\n        Object.defineProperty(this, 'constraint', {\n            get: function () {\n                return constraint;\n            }\n        });\n\n        this.getPolarAngle = function () {\n            return constraint.getPolarAngle();\n        };\n\n        this.getAzimuthalAngle = function () {\n            return constraint.getAzimuthalAngle();\n        };\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // center is old, deprecated; use \"target\" instead\n        this.center = this.target;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        // for reset\n\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // events\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n        }\n\n        this.update = function () {\n            if (this.autoRotate && state === STATE.NONE) {\n                constraint.rotateLeft(getAutoRotationAngle());\n            }\n\n            if (constraint.update() === true) {\n                this.dispatchEvent(changeEvent);\n            }\n        };\n\n        this.reset = function () {\n            state = STATE.NONE;\n\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n\n            this.update();\n        };\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.enableRotate === false) return;\n\n                state = STATE.ROTATE;\n\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.enableZoom === false) return;\n\n                state = STATE.DOLLY;\n\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.enablePan === false) return;\n\n                state = STATE.PAN;\n\n                panStart.set(event.clientX, event.clientY);\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (state === STATE.ROTATE) {\n                if (scope.enableRotate === false) return;\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n            } else if (state === STATE.DOLLY) {\n                if (scope.enableZoom === false) return;\n\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    constraint.dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n                    constraint.dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.enablePan === false) return;\n\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n            }\n\n            if (state !== STATE.NONE) scope.update();\n        }\n\n        function onMouseUp(/* event */) {\n            if (scope.enabled === false) return;\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n            if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var delta = 0;\n\n            if (event.wheelDelta !== undefined) {\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                // Firefox\n\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                constraint.dollyOut(getZoomScale());\n            } else if (delta < 0) {\n                constraint.dollyIn(getZoomScale());\n            }\n\n            scope.update();\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n            switch (event.keyCode) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n            }\n        }\n\n        function touchstart(event) {\n            if (scope.enabled === false) return;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    dollyStart.set(0, distance);\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n\n                    state = STATE.TOUCH_PAN;\n\n                    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n        }\n\n        function touchmove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n                    if (state !== STATE.TOUCH_ROTATE) return;\n\n                    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                    // rotating across whole screen goes 360 degrees around\n                    constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                    rotateStart.copy(rotateEnd);\n\n                    scope.update();\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n                    if (state !== STATE.TOUCH_DOLLY) return;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n\n                    dollyEnd.set(0, distance);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                    if (dollyDelta.y > 0) {\n                        constraint.dollyOut(getZoomScale());\n                    } else if (dollyDelta.y < 0) {\n                        constraint.dollyIn(getZoomScale());\n                    }\n\n                    dollyStart.copy(dollyEnd);\n\n                    scope.update();\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n                    if (state !== STATE.TOUCH_PAN) return;\n\n                    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    panDelta.subVectors(panEnd, panStart);\n\n                    pan(panDelta.x, panDelta.y);\n\n                    panStart.copy(panEnd);\n\n                    scope.update();\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function touchend(/* event */) {\n            if (scope.enabled === false) return;\n\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n\n        this.dispose = function () {\n            this.domElement.removeEventListener('contextmenu', contextmenu, false);\n            this.domElement.removeEventListener('mousedown', onMouseDown, false);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n            this.domElement.removeEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n            this.domElement.removeEventListener('touchstart', touchstart, false);\n            this.domElement.removeEventListener('touchend', touchend, false);\n            this.domElement.removeEventListener('touchmove', touchmove, false);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            window.removeEventListener('keydown', onKeyDown, false);\n        };\n\n        this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n        this.domElement.addEventListener('mousedown', onMouseDown, false);\n        this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n        this.domElement.addEventListener('touchstart', touchstart, false);\n        this.domElement.addEventListener('touchend', touchend, false);\n        this.domElement.addEventListener('touchmove', touchmove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n        this.update();\n    }\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n        object: {\n            get: function () {\n                return this.constraint.object;\n            }\n        },\n\n        target: {\n            get: function () {\n                return this.constraint.target;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: target is now immutable. Use target.set() instead.');\n                this.constraint.target.copy(value);\n            }\n        },\n\n        minDistance: {\n            get: function () {\n                return this.constraint.minDistance;\n            },\n\n            set: function (value) {\n                this.constraint.minDistance = value;\n            }\n        },\n\n        maxDistance: {\n            get: function () {\n                return this.constraint.maxDistance;\n            },\n\n            set: function (value) {\n                this.constraint.maxDistance = value;\n            }\n        },\n\n        minZoom: {\n            get: function () {\n                return this.constraint.minZoom;\n            },\n\n            set: function (value) {\n                this.constraint.minZoom = value;\n            }\n        },\n\n        maxZoom: {\n            get: function () {\n                return this.constraint.maxZoom;\n            },\n\n            set: function (value) {\n                this.constraint.maxZoom = value;\n            }\n        },\n\n        minPolarAngle: {\n            get: function () {\n                return this.constraint.minPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minPolarAngle = value;\n            }\n        },\n\n        maxPolarAngle: {\n            get: function () {\n                return this.constraint.maxPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxPolarAngle = value;\n            }\n        },\n\n        minAzimuthAngle: {\n            get: function () {\n                return this.constraint.minAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minAzimuthAngle = value;\n            }\n        },\n\n        maxAzimuthAngle: {\n            get: function () {\n                return this.constraint.maxAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxAzimuthAngle = value;\n            }\n        },\n\n        enableDamping: {\n            get: function () {\n                return this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                this.constraint.enableDamping = value;\n            }\n        },\n\n        dampingFactor: {\n            get: function () {\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                this.constraint.dampingFactor = value;\n            }\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                return !this.enableZoom;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                this.enableZoom = !value;\n            }\n        },\n\n        noRotate: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                return !this.enableRotate;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                this.enableRotate = !value;\n            }\n        },\n\n        noPan: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                return !this.enablePan;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                this.enablePan = !value;\n            }\n        },\n\n        noKeys: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                return !this.enableKeys;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                this.enableKeys = !value;\n            }\n        },\n\n        staticMoving: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                return !this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                this.constraint.enableDamping = !value;\n            }\n        },\n\n        dynamicDampingFactor: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.constraint.dampingFactor = value;\n            }\n        }\n    });\n\n    return OrbitControls;\n};\n","import TWEEN from '@tweenjs/tween.js';\n\nlet resolvedConfig;\n\n// This object contains the state of the app\nconst config = {\n    scale: 0.015,\n    arena: {\n        size: 180,\n        minX: -85,\n        maxX: 85,\n        minY: -85,\n        maxY: 85\n    },\n    offsets:{\n        x: 0,\n        y: 0,\n        z: 0,\n        showZeroMarker: true,\n        showCoordMarker: true,\n        scaleRange: 360\n    },\n    mqtt: {\n        server: localStorage.getItem(document.location.href.split('?')[0] + '.server') || 'webservices.ceykod.com',\n        port: localStorage.getItem(document.location.href.split('?')[0] + '.port') || 8883,\n        path: '/mqtt',\n        channel: localStorage.getItem(document.location.href.split('?')[0] + '.channel') || 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    selectedReality: 'M',\n    selectedRealities: {\n        real: true,\n        virtual: true\n    },\n    hiddenOpacity: 0.15,\n    isDev: true,\n    isShowingStats: true,\n    isShowingLables: true,\n    labelsVisibility: {\n        obstacles: false,\n        robots: false\n    },\n    isShowingRobotSnapshots: true,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n\n// Check localstorage for updated config, if not use above config\nconst storedConfig = localStorage.getItem(document.location.href + '.config');\nresolvedConfig = storedConfig !== null && storedConfig !== undefined ? JSON.parse(storedConfig) : config;\n\n// method to presist config data with localStorage\nexport const saveConfig = (data) => {\n    localStorage.setItem(document.location.href + '.config', JSON.stringify({ ...config, ...data }));\n};\n\nexport default resolvedConfig;\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        //this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setClearColor(new THREE.Color('lightgrey'), 0);\n\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        this.threeRenderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.threeRenderer.domElement.style.position = 'absolute';\n        this.threeRenderer.domElement.style.top = '0px';\n        this.threeRenderer.domElement.style.left = '0px';\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport Config from '../../data/config';\n\nexport default function () {\n    const renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.isShowingLables = Config.isShowingLables;\n    renderer.isShowingObstacleLables = Config.labelsVisibility.obstacles;\n    renderer.isShowingRobotLables = Config.labelsVisibility.robots;\n    renderer.updateSize = function () {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    document.addEventListener('DOMContentLoaded', () => renderer.updateSize(), false);\n    window.addEventListener('resize', () => renderer.updateSize(), false);\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh, visibility) => {\n    if (mesh !== undefined) {\n        const element = document.createElement('div');\n        element.className = 'label';\n\n        // TODO: use names, insted of IDs\n        element.textContent = object.name;\n\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        elementLabel.visible = visibility;\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        };\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if (mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import Config from '../../data/config';\n\nexport function transformPosition(x,y,z, scale) {\n    const tx = 0.01*Config.offsets.x + scale*(x);\n    const ty = 0.01*Config.offsets.y + scale*(-y + Math.abs(Config.arena.minY) );  // actual Y axis\n    const tz = 0.01*Config.offsets.z + scale*(-z); // actual Z axis\n\n    return {posX: tx, posY:ty, posZ:tz};\n}\nexport function transformScale(scale) {\n    return {scaleX:scale, scaleY:scale, scaleZ:scale};\n}\n\nexport function transformRotation(x,y,z) {\n    return {rotX:x-Math.PI / 2, rotY:y, rotZ:z};\n}\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n\n    setUp() {\n        bS = new BrowserStats();\n        glS = new glStats();\n        tS = new threeStats(this.renderer);\n\n        rS = new rStats({\n            CSSPath: './css/',\n            userTimingAPI: true,\n            values: {\n                frame: {\n                    caption: 'Total frame time (ms)',\n                    over: 16,\n                    average: true,\n                    avgMs: 100\n                },\n                fps: { caption: 'Framerate (FPS)', below: 30 },\n                calls: { caption: 'Calls (three.js)', over: 3000 },\n                raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n                rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n                texture: { caption: 'GenTex', average: true, avgMs: 100 }\n            },\n            groups: [\n                { caption: 'Framerate', values: ['fps', 'raf'] },\n                {\n                    caption: 'Frame Budget',\n                    values: ['frame', 'texture', 'setup', 'render']\n                }\n            ],\n            fractions: [{ base: 'frame', steps: ['texture', 'setup', 'render'] }],\n            plugins: [bS, tS]\n        });\n    }\n\n    static start() {\n        rS('frame').start();\n        glS.start();\n\n        rS('rAF').tick();\n        rS('FPS').frame();\n\n        rS('render').start();\n    }\n\n    static end() {\n        rS('render').end(); // render finished\n        rS('frame').end(); // frame finished\n\n        // Local rStats update\n        rS('rStats').start();\n        rS().update();\n        rS('rStats').end();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}, arenaSize:${Config.arena.size}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        // var material = new THREE.MeshPhongMaterial({\n        var material = new THREE.MeshStandardMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n\n        const {posX, posY, posZ } = transformPosition(0,0,0, scene_scale);\n        const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n        const {scaleX, scaleY, scaleZ } = transformScale(scene_scale);\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.rotation.set(rotX-Math.PI / 2, rotY, rotZ);\n        ground.position.set(posX, posY, posZ);\n        ground.scale.set(scaleX, scaleY, scaleZ);\n        ground.material.opacity = 0.35;\n        ground.receiveShadow = true;\n        markerGroup.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 18, 0x000000, 0x5b5b5b);\n        grid.rotation.set(rotX, rotY, rotZ);\n        grid.position.set(posX, posY, posZ);\n        grid.scale.set(scaleX, scaleY, scaleZ);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        markerGroup.add(grid);\n\n        // Zero marker\n        const zeroGeometry = new THREE.SphereGeometry(scene_scale*5, 16, 16);\n        const zeroMarker = new THREE.Mesh( zeroGeometry, new THREE.MeshBasicMaterial( {color: 0xffff00} ) );\n        zeroMarker.visible = Config.offsets.showZeroMarker;\n        markerGroup.add(zeroMarker);\n        window.zeroMarker = zeroMarker\n\n        const markerGeometry = new THREE.SphereGeometry(5, 16, 16);\n        const coordMarker = new THREE.Mesh( markerGeometry,new THREE.MeshBasicMaterial({color: 0xff0000}));\n        coordMarker.position.set(posX, posY, posZ);\n        coordMarker.scale.set(scene_scale, scene_scale, scene_scale);\n\n        coordMarker.name = \"coordinateMarker\";\n        coordMarker.visible = Config.offsets.showCoordMarker;\n        markerGroup.add(coordMarker);\n        window.coordMarker = coordMarker\n    }\n}\n","import Config, { saveConfig } from '../../data/config';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\n// COMMENT(NuwanJ)\n// Store the last state of the toggles in the window.localStorage\n// Refer: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n// Refer: https://github.com/dataarts/dat.gui/blob/master/API.md#GUI+useLocalStorage\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.gui.useLocalStorage = true;\n\n        // this.camera = main.camera.threeCamera;\n        // this.controls = main.controls.threeControls;\n        // this.light = main.light;\n    }\n\n    load(main, mesh) {\n\n        const offsetRange = parseInt(Config.offsets.scaleRange);\n\n        // ---------------------------------------------------------------------\n        // Add folders\n        this.gui\n        .add(Config, 'isShowingRobotSnapshots')\n        .name('Robot Snapshots')\n        .onChange((value) => {\n            Config.isShowingRobotSnapshots = value;\n            saveConfig(Config);\n        });\n\n        /* Labels Folder */\n        const labelsFolder = this.gui.addFolder('Labels');\n        labelsFolder\n        .add(Config, 'isShowingLables')\n        .name('All Labels')\n        .onChange((value) => {\n            Config.isShowingLables = value;\n            Config.labelsVisibility = {\n                obstacles: value,\n                robots: value\n            };\n            saveConfig(Config);\n        });\n\n        // ---------------------------------------------------------------------\n        // labelsFolder\n        // .add(Config.labelsVisibility, 'obstacles')\n        // .name('Obstacle Labels')\n        // .onChange((value) => {\n        //     // this.toggleLabels(this.scene.children, 'Obstacle', value);\n        //     // alert('Obstacle Label');\n        //     this.toggleLabels(window.markerGroup.children, 'Obstacle', value);\n        // });\n        // labelsFolder\n        // .add(Config.labelsVisibility, 'robots')\n        // .name('Robot Labels')\n        // .onChange((value) => {\n        //     // this.toggleLabels(this.scene.children, 'Robot', value);\n        //     // alert('Robot Label');\n        //     this.toggleLabels(window.markerGroup.children, 'Robot', value);\n        // });\n\n        // ---------------------------------------------------------------------\n        /* Reality Folder */\n        const realityFolder = this.gui.addFolder('Reality');\n\n        realityFolder\n        .add(Config.selectedRealities, 'real')\n        .name('Physical Reality')\n        .listen()\n        .onChange((value) => {\n            this.toggleReality('real', 'R');\n            saveConfig(Config);\n        });\n        realityFolder\n        .add(Config.selectedRealities, 'virtual')\n        .name('Virtual Reality')\n        .listen()\n        .onChange((value) => {\n            this.toggleReality('virtual', 'V');\n            saveConfig(Config);\n        });\n\n        // ---------------------------------------------------------------------\n        const placeFolder = this.gui.addFolder('Placement');\n\n        // Toggle visibility of Zero marker (yellow)\n        placeFolder\n        .add(Config.offsets, 'showZeroMarker')\n        .name('Zero Marker')\n        .listen()\n        .onChange((value) => {\n            saveConfig(Config);\n            window.zeroMarker.visible = value;\n        });\n\n        // Toggle visibility of Coord marker (red)\n        placeFolder\n        .add(Config.offsets, 'showCoordMarker')\n        .name('Coordinate Marker')\n        .listen()\n        .onChange((value) => {\n            saveConfig(Config);\n            window.coordMarker.visible = value;\n        });\n        // ---------------------------------------------------------------------\n        // X Offset\n        placeFolder\n        .add(Config.offsets, 'x')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('X Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.x = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Y Offset\n        placeFolder\n        .add(Config.offsets, 'y')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('Y Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.y = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Z Offset\n        placeFolder\n        .add(Config.offsets, 'z')\n        .min(-1*parseInt(360))\n        .max(parseInt(360))\n        .name('Z Offset')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.z = value\n            this.updateCoord();\n            saveConfig(Config);\n        });\n        // Scale Offset\n        placeFolder\n        .add(Config, 'scale', 0, 0.05)\n        .name('Scale')\n        .listen()\n        .onChange((value)=>{\n            Config.offsets.scale = value\n            window.coordMarker.scale.set(value,value,value);\n            saveConfig(Config);\n        });\n\n        /* Global */\n        this.gui.open();\n        // this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n    }\n\n    toggleLabels(objects, type, value) {\n        saveConfig(Config);\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (var variable of objects) {\n                if (variable.name.startsWith(type)) {\n                    variable.children[0].visible = value;\n                }\n            }\n        }\n    }\n\n    toggleReality(reality, selected) {\n        // by default visualizer will intercept all the communication coming to the channel regardless of the reality.\n        // this control panel will only toggle the 'visibility' of objects in the selected realities.\n        const objects = window.markerGroup.children;\n\n        saveConfig(Config);\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            const reality = obj[1]['reality'];\n\n            if (reality !== undefined && reality === 'R') {\n                // obj[1].transparent = Config.selectedRealities.real;\n                obj[1].material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n            } else if (reality !== undefined && reality === 'V') {\n                // obj[1].transparent = Config.selectedRealities.virtual;\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n            }\n        });\n    }\n\n\n    updateCoord(){\n        const pos = window.coordMarker.position;\n        const {posX, posY, posZ } = transformPosition(pos.x,pos.y,pos.z, scene_scale);\n        window.coordMarker.position.set(posX, posY, posZ);\n    }\n\n    show() {\n        // this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        this.scale = scene_scale;\n\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) callback();\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n\n        material.userData.originalColor = new THREE.Color(0x666666);\n        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.obstacles;\n        material.userData.originalEmmisive = material.emissive.getHex();\n        material.selected = false;\n        material.transparent = true;\n\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n        const reality = obstacle.reality == undefined ? 'V' : obstacle.reality;\n        const mesh = new THREE.Mesh(geometry, material);\n\n        // TODO: add the name defined in env.config.json as discussed on 2021-02-18\n        //      Need some obstacle protocol revision + simulator updates\n        const name_temp = 'Obs_' + id.toString().substring(0, 8) + '...';\n\n        mesh.name = OBSTACLE_PREFIX + id;\n        mesh.reality = reality; // set reality flag\n\n        if (mesh.reality === 'V') {\n            // material.visible = Config.selectedRealities.virtual;\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n        } else if (mesh.reality === 'R') {\n            // material.visible = Config.selectedRealities.real;\n            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n        }\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        window.markerGroup.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            const {posX, posY, posZ } = transformPosition(x,y,z, this.scale);\n            const {scaleX, scaleY, scaleZ } = transformScale(this.scale);\n\n            mesh.position.set(posX, posY, posZ);\n            mesh.scale.set(scaleX, scaleY, scaleZ);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation != undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = (x / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            const {rotX, rotY, rotZ } = transformRotation(radX, radY, radZ);\n            mesh.rotation.set(rotX, rotY,rotZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels to every obstacle, immediately displayed if enabled\n        addLabel(OBSTACLE_PREFIX, { id: obstacle.id, name: name_temp }, mesh, Config.labelsVisibility.obstacles);\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        }\n        throw new TypeError('unsupported geometry type');\n\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n        // Default material type\n        return new THREE.MeshStandardMaterial(m.properties);\n\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            }\n            return 0;\n\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = window.markerGroup.getObjectByName(name);\n\n        if (obstacle !== undefined) {\n            window.markerGroup.remove(obstacle);\n            removeLabel(obj[1]);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = window.markerGroup.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                window.markerGroup.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\nimport {transformPosition, transformScale, transformRotation} from '../helpers/coordinateTransform';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'Robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        this.scale = scene_scale;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        if (r !== undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n            if (callback !== null) callback('success');\n        } else if (callback !== null) callback('undefined');\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V',callback) {\n        var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r === undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n\n                // Limit the arena that robot can go\n                x = Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n                const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    const material = new THREE.MeshStandardMaterial(\n                        { color: 0x666666,opacity: opacity,transparent: true });\n                        material.userData.originalColor = new THREE.Color(0x666666);\n                        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.robots;\n                        material.selected = false;\n\n                        const scale = window.scene_scale || 0.1;\n\n                        const {posX, posY, posZ } = transformPosition(x,y, 0, scale);\n                        const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n                        const {scaleX, scaleY, scaleZ } = transformScale(scale);\n\n                        // console.log('scale', scale);\n                        var r = new THREE.Mesh(geometry, material);\n                        r.receiveShadow = true;\n                        r.robotId = id;\n                        r.name = ROBOT_PREFIX + id;\n                        r.scale.set(scaleX, scaleY, scaleZ);\n                        r.position.set(posX, posY, posZ);\n                        r.rotation.set(rotX, rotY, rotZ ); //.y = (heading - 90) * THREE.Math.DEG2RAD;\n                        r.reality = reality; // set reality flag\n\n                        if (reality === 'V') {\n                            // material.visible = Config.selectedRealities.virtual;\n                            material.opacity = Config.selectedRealities.virtual ? 1.0 : Config.hiddenOpacity;\n                        } else if (reality === 'R') {\n                            // material.visible = Config.selectedRealities.real;\n                            material.opacity = Config.selectedRealities.real ? 1.0 : Config.hiddenOpacity;\n                        }\n\n                        window.markerGroup.add(r);\n\n                        r.clickEvent = function (m) {\n                            window.robot.alert(m);\n                        };\n\n                        // Add labels to every robot, immediately displayed if enabled\n                        addLabel(ROBOT_PREFIX, { id, name: r.name }, r, Config.labelsVisibility.robots);\n\n                        console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                        // Callback function\n                        if (callback !== undefined) callback('success');\n                    });\n                } else {\n                    console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n                }\n\n            }else if (reality === REALITY || REALITY === 'M') {\n                // Reality matches\n\n                this.setReality(id, reality);\n                // Callback function\n                if (callback !== undefined) callback('success');\n\n            }else{\n                // Robot reality not matching with environment reality\n                this.delete(id);\n                // Callback function\n                if (callback !== undefined) callback('deleted');\n            }\n            return r;\n        }\n\n        delete(id, callback) {\n            if (id !== undefined) {\n                var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n\n                if (r !== undefined) {\n                    scene.remove(r);\n                    console.log('Deleted> id:', id);\n                    removeLabel(obj[1]);\n                    if (callback !== undefined) callback('success');\n                } else if (callback !== undefined) callback('not found');\n            } else if (callback !== undefined) callback('id not specified');\n        }\n\n        deleteAll() {\n            // Delete all robots\n            const objects = window.markerGroup.children;\n\n            Object.entries(objects).forEach((obj) => {\n                const name = obj[1]['name'];\n\n                if (name.startsWith(ROBOT_PREFIX)) {\n                    console.log('Deleted>', name);\n                    removeLabel(obj[1]);\n                    window.markerGroup.remove(obj[1]);\n                }\n            });\n        }\n\n        exists(id) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            return r;\n        }\n\n        move(id, x, y, heading, callback) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            if (r !== undefined) {\n                const currentHeading = r.rotation.y;\n                const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n                var position = { x: r.position.x, y: r.position.z, heading: r.rotation.y };\n\n                // TODO: need a smoother way than this rough trick\n                // If current and target rotations in different signs\n                const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n                // Limit the arena that robot can go\n                x = Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n                y = Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n                heading = Math.round(heading * 10) / 10;\n\n                const {posX, posY, posZ } = transformPosition(x,y, 0, scale);\n                const {rotX, rotY, rotZ } = transformRotation(0,0,0);\n\n                // const speed = 10;\n                const distance = Math.sqrt(Math.pow(posX - position.x, 2) + Math.pow(posY - position.y, 2));\n\n                const moveTime = 1; //distance / speed;\n                // TODO: If distance is 0, need to handle only the rotation\n\n                if (distance !== 0) {\n                    var tween = new TWEEN.Tween(position)\n                    .to({ x: posX, y: posY, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n                } else {\n                    // No move, only the rotation\n                    r.rotation.y = newHeading;\n                }\n                return r;\n            } else {\n                if (callback != null) callback('undefined');\n            }\n        }\n\n        get_coordinates(id) {\n            var r = window.markerGroup.getObjectByName(ROBOT_PREFIX + id);\n            if (r !== undefined) {\n                console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n                return r;\n            }\n            return null;\n        }\n\n        update() {\n            TWEEN.update();\n        }\n\n        requestSnapshot(mesh) {\n            return new Promise((resolve, reject) => {\n                // TODO: Review this\n                const req = window.mqtt.publish(\n                    window.channel + '/mgt/robots/snapshot',\n                    JSON.stringify({ id: mesh.robotId })\n                );\n                resolve(!req);\n            });\n        }\n\n        alert(mesh) {\n            // Display an alert on window\n            const disp = document.querySelector('#msg-box');\n            const prevContent = document.getElementById('msg-content');\n            let content = document.createElement('div');\n            content.setAttribute('id', 'msg-content');\n            let nodeContent;\n            if (Config.isShowingRobotSnapshots) {\n                nodeContent = document.createTextNode(`${mesh.name} Snapshot Loading...`);\n                this.requestSnapshot(mesh);\n            } else {\n                nodeContent = document.createTextNode(`${mesh.name}`);\n            }\n            content.appendChild(nodeContent);\n            disp.replaceChild(content, prevContent);\n            disp.style.display = 'block';\n            setTimeout(function () {\n                disp.style.opacity = '1.0';\n                disp.style.display = 'none';\n            }, 10000);\n        }\n    }\n","let jwt = require('jsonwebtoken');\n\nfunction getUrlVars() {\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    return vars;\n}\n\nfunction getUrlParam(parameter, defaultvalue) {\n    var urlparameter = defaultvalue;\n    if (window.location.href.indexOf(parameter) > -1) {\n        urlparameter = getUrlVars()[parameter];\n    }\n    return urlparameter;\n}\n\nexport function getCredentials() {\n    // TODO: Add channel, host and port into URL (as optional parameters)\n    // Suggestion: Use JWT insted of exposed credentials\n    // Simulator server can provide the JWT token\n    const storedCredentials = localStorage.getItem(document.location.href.split('?')[0] + '.credentials');\n    const username = getUrlParam('username', false);\n    const password = getUrlParam('password', false);\n    const key = getUrlParam('key', false);\n    const channel = getUrlParam('channel', false);\n    const port = getUrlParam('port', false);\n    const server = getUrlParam('server', false);\n    clearParams();\n    setTimeout(() => {\n        if (server !== false) {\n            localStorage.setItem(document.location.href.split('?')[0] + '.server', server);\n        }\n        if (channel !== false) {\n            localStorage.setItem(document.location.href.split('?')[0] + '.channel', channel);\n        }\n        if (port !== false) {\n            localStorage.setItem(document.location.href.split('?')[0] + '.port', port);\n        }\n        if (key !== false) {\n            localStorage.setItem(document.location.href.split('?')[0] + '.key', key);\n        }\n    }, 2000);\n    if (username === false && password === false && storedCredentials !== null) {\n        return JSON.parse(storedCredentials);\n    } else if (username !== false && password !== false) {\n        localStorage.setItem(\n            document.location.href.split('?')[0] + '.credentials',\n            JSON.stringify({\n                username,\n                password\n            })\n        );\n        return {\n            username,\n            password\n        };\n    } else if (key !== false) {\n        // decode the api key\n        return decodeKey(key);\n    } else {\n        return -1;\n    }\n}\n\nfunction clearParams() {\n    console.log('clear');\n    // history.replaceState &&\n    //     history.replaceState(\n    //         null,\n    //         '',\n    //         location.pathname + location.search.replace(/[\\?&]message=[^&]+/, '').replace(/^&/, '?')\n    //     );\n\n    // TODO: bug in here\n    // window.history.replaceState({}, document.title, '/' + '');\n    // location.pathname + location.search.replace(/[\\?&]message=[^&]+/, '').replace(/^&/, '?') + location.hash\n    // location.pathname + location.search.replace(/[\\?&]message=[^&]+/, '').replace(/^&/, '?')\n}\n\nfunction decodeKey() {\n    try {\n        let decoded = jwt.verify(token, 'swarm-visualizer-secret');\n        return decoded;\n    } catch (err) {\n        // err\n        console.log('Token Error');\n        return -1;\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport MQTT from 'paho-mqtt';\n\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\nimport { getCredentials } from '../helpers/urlHelper';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n// -----------------------------------------------------------------------------\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO = 'localization/info';\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// Robot management snapshot topic\nconst TOPIC_MANAGEMENT_SNAPSHOT = 'mgt/robots/?';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene, markerGroup) {\n        this.markerGroup = markerGroup;\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n        const credentials = getCredentials();\n\n        if (credentials === -1) {\n            alert('Unauthorized access! The Visualizer will not work properly.');\n        } else {\n            const { username, password } = credentials;\n            // create a random client Id\n            const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n            this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n            window.mqtt = this.client;\n\n            this.client.connect({\n                userName: username,\n                password: password,\n                reconnect: true,\n                useSSL: true,\n                cleanSession: false,\n                onSuccess: () => {\n                    console.log('MQTT: connected');\n\n                    // Subscribe to topics\n                    this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                    this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                    this.subscribe(TOPIC_ROBOT_CREATE);\n                    this.subscribe(TOPIC_ROBOT_DELETE);\n                    this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                    this.subscribe(TOPIC_CHANGE_COLOR);\n                    this.subscribe(TOPIC_OBSTACLES_LIST);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                    this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n                    this.subscribe(TOPIC_MANAGEMENT_SNAPSHOT);\n\n                    // Request for obstacle data\n                    this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n                    \n                    // Request for coordinate data\n                    this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                    // Access globally\n                    window.robot = this.robot;\n                    window.obstacles = this.obstacles;\n\n                    this.client.onMessageArrived = this.onMessageArrived;\n                    this.client.onConnectionLost = this.onConnectionLost;\n                },\n                onFailure: () => {\n                    console.log('MQTT: connection failed');\n                    alert('MQTT: connection failed!');\n                }\n            });\n        }\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            // window.channel = channelHash.substring(1);\n            window.channel = channelHash.split('#')[1].split('?')[0];\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel, channelHash);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n\n            try {\n                const data = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined) {\n                    // Have data on this reality\n                    for (const i in data) {\n                        const { id, x, y, heading } = data[i];\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\n\n                        if (reality === REALITY || REALITY === 'M') {\n                            // Create only if robots match with platform's allowed reality\n                            if (window.robot.exists(id) == undefined) {\n                                window.robot.create(id, x, y, heading, reality);\n                            } else {\n                                window.robot.move(id, x, y, heading);\n                                window.robot.setReality(id, reality);\n                            }\n                        } else {\n                            // reality not matching; remove\n                            robot.delete(id);\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n            window.obstacles.deleteIfExists(data.id);\n\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B);\n            } catch (e) {\n                console.error(e);\n            }\n\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n\n        } else if (msg.startsWith('MSG')) {\n            const m = 'Notice: ' + msg.substring(4);\n            const t = 2000 + m.length * 95;\n\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n            const disp = document.querySelector('#msg-box');\n            disp.innerHTML = m;\n            disp.style.display = 'block';\n\n            setTimeout(function () {\n                document.querySelector('#msg-box').style.display = 'none';\n            }, t);\n        } else {\n        }\n\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\nimport * as THREEAR from 'threear';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport Label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Config data\nimport Config from './../data/config';\n\n// Helpers\nimport Stats from './helpers/stats';\n//import MeshHelper from './helpers/meshHelper';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Global Variables\nlet camera, labelRenderer, INTERSECTED, selectedLabel;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        this.container = container;\n\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            // this.gui = new DatGUI(this)\n        }\n\n        // Main scene creation, and set global scale\n        window.scene = new THREE.Scene();\n        window.scene_scale = Config.scale;\n\n        // High level reality flag\n        window.selectedReality = Config.selectedReality;\n\n        // Renderer object\n        window.renderer = new Renderer(scene, container).threeRenderer;\n\n        // Apply fog\n        //scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        // init scene and camera\n        camera = new THREE.Camera();\n        // camera = new Camera(renderer); // Perspective camera giving an error\n        scene.add(camera);\n\n        // Create and place lights in scene\n        this.light = new Light(scene);\n        this.camera = camera;\n\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        var markerGroup = new THREE.Group();\n        scene.add(markerGroup);\n        window.markerGroup = markerGroup;\n\n        var source = new THREEAR.Source({ renderer, camera });\n\n        this.mqtt = new MQTTClient(scene, markerGroup);\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            // this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            this.labelRenderer = Label();\n            window.labelRenderer = this.labelRenderer; // add to global scope\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        THREEAR.initialize({ source: source }).then((controller) => {\n            // add a torus knot\n            // var geometry = new THREE.TorusKnotGeometry(0.3,0.1,64,16);\n            // var material = new THREE.MeshNormalMaterial();\n            // var torus = new THREE.Mesh( geometry, material );\n            // torus.position.y = 0.5\n            // markerGroup.add(torus);\n            //\n            // var geometry = new THREE.CubeGeometry(1,1,1);\n            // var material = new THREE.MeshNormalMaterial({\n            //     transparent : true,\n            //     opacity: 0.5,\n            //     side: THREE.DoubleSide\n            // });\n            // var cube = new THREE.Mesh( geometry, material );\n            // cube.position.y\t= geometry.parameters.height / 2;\n            // markerGroup.add(cube)\n\n            // -------------------------------------------------------\n            // Create the environment\n\n            this.environment = new Environment();\n\n            // -------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                this.gui.show();\n            }\n\n            var patternMarker = new THREEAR.PatternMarker({\n                // patternUrl: './assets/data/hiro.patt',\n                patternUrl: './assets/data/pattern-kanji.patt',\n                markerObject: markerGroup\n            });\n\n            controller.trackMarker(patternMarker);\n\n            // run the rendering loop\n            var lastTimeMsec = 0;\n            requestAnimationFrame(function animate(nowMsec) {\n                // keep looping\n                requestAnimationFrame(animate);\n                // measure time\n                lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n                var deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n                lastTimeMsec = nowMsec;\n\n                // call each update function\n                controller.update(source.domElement);\n\n                // cube.rotation.x += deltaMsec/10000 * Math.PI\n                //torus.rotation.y += deltaMsec/1000 * Math.PI\n                //torus.rotation.z += deltaMsec/1000 * Math.PI\n\n                // ----------------------\n                // Render rStats if Dev\n                if (Config.isDev && Config.isShowingStats) {\n                    // Stats.start();\n                }\n\n                // Call render function and pass in created scene and camera\n                renderer.render(scene, camera);\n\n                // render labels if enabled\n                if (Config.isShowingLables) {\n                    window.labelRenderer.domElement.hidden = false;\n                } else {\n                    window.labelRenderer.domElement.hidden = true;\n                }\n\n                // window.labelRenderer.render(scene, camera.threeCamera);\n\n                if (Config.isDev && Config.isShowingStats) {\n                     // this.stats.update();\n                 }\n\n                // Delta time is sometimes needed for certain updates\n                //const delta = this.clock.getDelta();\n\n                // Call any vendor or module frame updates here\n                TWEEN.update();\n                //this.controls.threeControls.update();\n            });\n        });\n\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Eventlistner for catching mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n    }\n\n    // constructor(container) {\n    //     // Set container property to container element\n    //     this.container = container;\n    //\n    //     // Start Three clock\n    //     this.clock = new THREE.Clock();\n    //\n    //     // Main scene creation\n    //     scene = new THREE.Scene();\n    //     window.scene = scene; // config as a global variable\n    //\n    //     scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n    //\n    //     this.mqtt = new MQTTClient(scene);\n    //\n    //     // Get Device Pixel Ratio first for retina\n    //     if (window.devicePixelRatio) {\n    //         Config.dpr = window.devicePixelRatio;\n    //     }\n    //\n    //     // Main renderer constructor\n    //     this.renderer = new Renderer(scene, container);\n    //\n    //     // Components instantiations\n    //     camera = new Camera(this.renderer.threeRenderer);\n    //\n    //     this.controls = new Controls(camera.threeCamera, container);\n    //     this.light = new Light(scene);\n    //\n    //     // Create and place lights in scene\n    //     const lights = ['ambient', 'directional', 'point', 'hemi'];\n    //     lights.forEach((light) => this.light.place(light));\n    //\n\n    //\n    //     // Instantiate texture class\n    //     this.texture = new Texture();\n    //\n    //     // Start loading the textures and then go on to load the model after the texture Promises have resolved\n    //     this.texture.load().then(() => {\n    //         this.manager = new THREE.LoadingManager();\n    //\n    //\n    //         // -----------------------------------------------------------------\n    //\n    //         // onProgress callback\n    //         this.manager.onProgress = (item, loaded, total) => {\n    //             // console.log(`${item}: ${loaded} ${total}`);\n    //         };\n    //\n    //         // All loaders done now\n    //         this.manager.onLoad = () => {\n    //             alert('Loaded');\n    //\n    //             // Set up interaction manager with the app now that the model is finished loading\n    //             new Interaction(\n    //                 this.renderer.threeRenderer,\n    //                 scene,\n    //                 camera.threeCamera,\n    //                 this.controls.threeControls\n    //             );\n    //\n    //             // Add dat.GUI controls if dev\n    //             if (Config.isDev) {\n    //                 this.meshHelper = new MeshHelper(scene, this.model.obj);\n    //                 if (Config.mesh.enableHelper) this.meshHelper.enable();\n    //                 //this.gui.load(this, this.model.obj);\n    //             }\n    //\n    //             // Everything is now fully loaded\n    //             Config.isLoaded = true;\n    //             this.container.querySelector('#loading').style.display = 'none';\n    //         };\n    //     });\n    //\n    //     // Start render which does not wait for model fully loaded\n    //\n    //     this.render();\n    //     this.container.querySelector('#loading').style.display = 'none';\n    //\n    //     // Add eventlistner for catch mouse click events\n    //     window.addEventListener('click', this.onDocumentMouseDown, false);\n    // }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        // // Not suppported in AR so far\n        // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        // mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        //\n        // raycaster.setFromCamera(mouse, camera);\n        //\n        // const intersects = raycaster.intersectObjects(scene.children);\n        //\n        // if (intersects.length > 0) {\n        //     const object = intersects[0].object;\n        //     if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //     INTERSECTED = object;\n        //     selectedLabel = INTERSECTED.children[0];\n        //     INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n        //     INTERSECTED.labelsVisibility = INTERSECTED.material.labelVisibility;\n        //     if (selectedLabel !== undefined && selectedLabel.visible !== undefined && Config.isShowingLables) {\n        //         selectedLabel.visible = !selectedLabel.visible;\n        //     }\n        //     INTERSECTED.material.selected = !INTERSECTED.material.selected;\n        //     // Obstacle selection event handling\n        //     if (INTERSECTED.name.startsWith('Obstacle')) {\n        //         if (INTERSECTED.material.selected) {\n        //             INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\n        //             INTERSECTED.material.emissive.setHex(0xf95f4a);\n        //         } else {\n        //             INTERSECTED.currentHex = INTERSECTED.material.userData.originalEmmisive;\n        //             INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\n        //         }\n        //         // Robot selection event handling\n        //     } else if (INTERSECTED.name.startsWith('Robot')) {\n        //         if (INTERSECTED.material.selected) {\n        //             INTERSECTED.material.setValues({ opacity: 0.5 });\n        //         } else {\n        //             INTERSECTED.material.setValues({ opacity: 1 });\n        //         }\n        //         if (INTERSECTED.clickEvent !== undefined) {\n        //             INTERSECTED.clickEvent(INTERSECTED);\n        //         }\n        //     }\n        // } else {\n        //     if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //     INTERSECTED = null;\n        // }\n    }\n\n    onDocumentMouseMove(event) {\n        event.preventDefault();\n\n        // // Not suppoprted in AR so far\n        // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        // mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        //\n        // raycaster.setFromCamera(mouse, camera.threeCamera);\n        //\n        // const intersects = raycaster.intersectObjects(scene.children, true);\n        // if (intersects.length > 0) {\n        //     const object = intersects[0].object;\n        //     if (INTERSECTED !== object) {\n        //         if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n        //         INTERSECTED = object;\n        //         selectedLabel = INTERSECTED.children[0];\n        //         INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n        //         INTERSECTED.currentColor = INTERSECTED.material.opacity;\n        //         INTERSECTED.material.setValues({ color: 0x03dffc, opacity: 0.75 });\n        //     }\n        // } else {\n        //     if (INTERSECTED)\n        //     INTERSECTED.material.setValues({ opacity: 1.0, color: INTERSECTED.material.userData.originalColor });\n        //     INTERSECTED = null;\n        // }\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}